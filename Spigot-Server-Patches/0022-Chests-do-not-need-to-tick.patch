From 6defe8ebb827a797685e6bc6b0c2d713bae9a384 Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Tue, 1 Mar 2016 22:01:19 -0600
Subject: [PATCH] Chests do not need to tick


diff --git a/src/main/java/net/minecraft/tileentity/TileEntityChest.java b/src/main/java/net/minecraft/tileentity/TileEntityChest.java
index 5af7e26..babd013 100644
--- a/src/main/java/net/minecraft/tileentity/TileEntityChest.java
+++ b/src/main/java/net/minecraft/tileentity/TileEntityChest.java
@@ -29,7 +29,7 @@ import org.bukkit.craftbukkit.entity.CraftHumanEntity;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 import org.bukkit.entity.HumanEntity;
 
-public class TileEntityChest extends TileEntityLockableLoot implements ITickable {
+public class TileEntityChest extends TileEntityLockableLoot { // Paper - Remove ITickable
     private NonNullList<ItemStack> chestContents = NonNullList.<ItemStack>withSize(27, ItemStack.EMPTY);
     /** Determines if the check for adjacent chests has taken place. */
     public boolean adjacentChestChecked;
@@ -226,6 +226,8 @@ public class TileEntityChest extends TileEntityLockableLoot implements ITickable
      * Like the old updateEntity(), except more generic.
      */
     public void update() {
+        // Paper start - Nope
+        /*
         this.checkForAdjacentChests();
         int i = this.pos.getX();
         int j = this.pos.getY();
@@ -299,6 +301,8 @@ public class TileEntityChest extends TileEntityLockableLoot implements ITickable
                 this.lidAngle = 0.0F;
             }
         }
+        */
+        // Paper end
     }
 
     public boolean receiveClientEvent(int id, int type) {
@@ -319,6 +323,26 @@ public class TileEntityChest extends TileEntityLockableLoot implements ITickable
             int oldPower = Math.max(0, Math.min(15, this.numPlayersUsing));
             ++this.numPlayersUsing;
 
+            // Paper start - Move chest open sound out of the tick loop
+            this.checkForAdjacentChests();
+            if (this.numPlayersUsing > 0 && this.lidAngle == 0.0F && this.adjacentChestZNeg == null && this.adjacentChestXNeg == null) {
+                this.lidAngle = 0.7F;
+
+                double d1 = (double) pos.getX() + 0.5D;
+                double d0 = (double) pos.getZ() + 0.5D;
+
+                if (this.adjacentChestZPos != null) {
+                    d0 += 0.5D;
+                }
+
+                if (this.adjacentChestXPos != null) {
+                    d1 += 0.5D;
+                }
+
+                this.world.playSound((EntityPlayer)null, d1, (double) pos.getY() + 0.5D, d0, SoundEvents.BLOCK_CHEST_OPEN, SoundCategory.BLOCKS, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
+            }
+            // Paper end
+
             if (this.world == null) {
                 return;
             }
@@ -345,6 +369,33 @@ public class TileEntityChest extends TileEntityLockableLoot implements ITickable
         if (!player.isSpectator() && this.getBlockType() instanceof BlockChest) {
             int oldPower = Math.max(0, Math.min(15, this.numPlayersUsing));
             --this.numPlayersUsing;
+
+            // Paper start - Move chest close sound out of the tick loop
+            if (this.numPlayersUsing == 0 && this.lidAngle > 0.0F || this.numPlayersUsing > 0 && this.lidAngle < 1.0F) {
+                if (this.numPlayersUsing > 0) {
+                    this.lidAngle += 0.1F;
+                } else {
+                    this.lidAngle -= 0.1F;
+                }
+
+                if (this.lidAngle > 1.0F) {
+                    this.lidAngle = 1.0F;
+                }
+
+                double d0 = (double) pos.getX() + 0.5D;
+                double d2 = (double) pos.getZ() + 0.5D;
+
+                if (this.adjacentChestZPos != null) {
+                    d2 += 0.5D;
+                }
+
+                if (this.adjacentChestXPos != null) {
+                    d0 += 0.5D;
+                }
+
+                this.world.playSound((EntityPlayer)null, d0, (double) pos.getY() + 0.5D, d2, SoundEvents.BLOCK_CHEST_CLOSE, SoundCategory.BLOCKS, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
+            }
+
             this.world.addBlockEvent(this.pos, this.getBlockType(), 1, this.numPlayersUsing);
             this.world.notifyNeighborsOfStateChange(this.pos, this.getBlockType(), false);
 
diff --git a/src/main/java/net/minecraft/tileentity/TileEntityEnderChest.java b/src/main/java/net/minecraft/tileentity/TileEntityEnderChest.java
index 15b5247..2cb88f9 100644
--- a/src/main/java/net/minecraft/tileentity/TileEntityEnderChest.java
+++ b/src/main/java/net/minecraft/tileentity/TileEntityEnderChest.java
@@ -6,7 +6,7 @@ import net.minecraft.init.SoundEvents;
 import net.minecraft.util.ITickable;
 import net.minecraft.util.SoundCategory;
 
-public class TileEntityEnderChest extends TileEntity implements ITickable {
+public class TileEntityEnderChest extends TileEntity { // Paper - Remove ITickable
     public float lidAngle;
     /** The angle of the ender chest lid last tick */
     public float prevLidAngle;
@@ -79,11 +79,28 @@ public class TileEntityEnderChest extends TileEntity implements ITickable {
 
     public void openChest() {
         ++this.numPlayersUsing;
+        // Paper start - Move enderchest sounds out of the tick loop
+        if (this.numPlayersUsing > 0 && this.lidAngle == 0.0F) {
+            this.lidAngle = 0.7F;
+            double var5 = (double) pos.getX() + 0.5D;
+            double var7 = (double) pos.getZ() + 0.5D;
+            this.world.playSound((EntityPlayer)null, var5, (double)pos.getY() + 0.5D, var7, SoundEvents.BLOCK_ENDERCHEST_OPEN, SoundCategory.BLOCKS, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
+
+        }
+        // Paper end
         this.world.addBlockEvent(this.pos, Blocks.ENDER_CHEST, 1, this.numPlayersUsing);
     }
 
     public void closeChest() {
         --this.numPlayersUsing;
+        // Paper start - Move enderchest sounds out of the tick loop
+        if (this.numPlayersUsing == 0 && this.lidAngle > 0.0F || this.numPlayersUsing > 0 && this.lidAngle < 1.0F) {
+            double var12 = (double) pos.getX() + 0.5D;
+            double var9 = (double) pos.getZ() + 0.5D;
+            this.world.playSound((EntityPlayer)null, var12, (double) pos.getY() + 0.5D, var9, SoundEvents.BLOCK_ENDERCHEST_CLOSE, SoundCategory.BLOCKS, 0.5F, this.world.rand.nextFloat() * 0.1F + 0.9F);
+            this.lidAngle = 0.0F;
+        }
+        // Paper end
         this.world.addBlockEvent(this.pos, Blocks.ENDER_CHEST, 1, this.numPlayersUsing);
     }
 
-- 
2.12.1.windows.1

