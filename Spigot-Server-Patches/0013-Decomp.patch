From e2c6df9d99e21fdbefad01a9f838f6f8fca5c553 Mon Sep 17 00:00:00 2001
From: DemonWav <demonwav@gmail.com>
Date: Mon, 3 Apr 2017 00:57:21 -0500
Subject: [PATCH] Decomp


diff --git a/src/main/java/net/minecraft/world/WorldEntitySpawner.java b/src/main/java/net/minecraft/world/WorldEntitySpawner.java
index de7329e..4b984ee 100644
--- a/src/main/java/net/minecraft/world/WorldEntitySpawner.java
+++ b/src/main/java/net/minecraft/world/WorldEntitySpawner.java
@@ -32,7 +32,12 @@ public final class WorldEntitySpawner {
     private int getEntityCount(WorldServer server, Class oClass) {
         int i = 0;
 
-        for (Long coord : this.eligibleChunksForSpawning) {
+        // Paper - fix decompile start
+        Iterator<Long> it = this.eligibleChunksForSpawning.iterator();
+//        for (Long coord : this.eligibleChunksForSpawning) {
+        while (it.hasNext()) {
+            Long coord = it.next();
+            // Paper - fix decompile end
             int x = LongHash.msw(coord.longValue());
             int z = LongHash.lsw(coord.longValue());
 
diff --git a/src/main/java/net/minecraft/world/storage/SaveHandler.java b/src/main/java/net/minecraft/world/storage/SaveHandler.java
index e195c46..596ceaa 100644
--- a/src/main/java/net/minecraft/world/storage/SaveHandler.java
+++ b/src/main/java/net/minecraft/world/storage/SaveHandler.java
@@ -223,11 +223,11 @@ public class SaveHandler implements ISaveHandler, IPlayerFileData {
 
         if (nbttagcompound != null) {
             if (player instanceof EntityPlayerMP) {
-                CraftPlayer player = (CraftPlayer)player.getBukkitEntity();
+                CraftPlayer bukkitPlayer = (CraftPlayer)player.getBukkitEntity(); // Paper - fix decompile
                 long modified = (new File(this.playersDirectory, player.getUniqueID().toString() + ".dat")).lastModified();
 
-                if (modified < player.getFirstPlayed()) {
-                    player.setFirstPlayed(modified);
+                if (modified < bukkitPlayer.getFirstPlayed()) { // Paper - fix decompile
+                    bukkitPlayer.setFirstPlayed(modified); // Paper - fix decompile
                 }
             }
 
diff --git a/src/main/java/net/minecraft/world/storage/WorldInfo.java b/src/main/java/net/minecraft/world/storage/WorldInfo.java
index 7ea4bc6..d6a802f 100644
--- a/src/main/java/net/minecraft/world/storage/WorldInfo.java
+++ b/src/main/java/net/minecraft/world/storage/WorldInfo.java
@@ -1,6 +1,7 @@
 package net.minecraft.world.storage;
 
 import com.google.common.collect.Maps;
+import java.util.List;
 import java.util.Map;
 import java.util.Map.Entry;
 import javax.annotation.Nullable;
@@ -755,7 +756,7 @@ public class WorldInfo {
         this.difficulty = newDifficulty;
         SPacketServerDifficulty packet = new SPacketServerDifficulty(this.getDifficulty(), this.isDifficultyLocked());
 
-        for (EntityPlayerMP player : this.world.playerEntities) {
+        for (EntityPlayerMP player : (List<EntityPlayerMP>) (List) this.world.playerEntities) { // Paper - fix decompile
             player.connection.sendPacket(packet);
         }
     }
diff --git a/src/main/java/net/minecraft/world/storage/loot/LootPool.java b/src/main/java/net/minecraft/world/storage/loot/LootPool.java
index 4b08629..7763554 100644
--- a/src/main/java/net/minecraft/world/storage/loot/LootPool.java
+++ b/src/main/java/net/minecraft/world/storage/loot/LootPool.java
@@ -39,7 +39,7 @@ public class LootPool {
      * with items with higher weights being more probable.
      */
     protected void createLootRoll(Collection<ItemStack> stacks, Random rand, LootContext context) {
-        ArrayList var4 = Lists.newArrayList();
+        ArrayList<LootEntry> var4 = Lists.newArrayList(); // Paper - fix decompile
         int var5 = 0;
 
         for (LootEntry var9 : this.lootEntries) {
diff --git a/src/main/java/net/minecraft/world/storage/loot/LootTable.java b/src/main/java/net/minecraft/world/storage/loot/LootTable.java
index b9e7c13..c52c1ab 100644
--- a/src/main/java/net/minecraft/world/storage/loot/LootTable.java
+++ b/src/main/java/net/minecraft/world/storage/loot/LootTable.java
@@ -47,7 +47,7 @@ public class LootTable {
     }
 
     public void fillInventory(IInventory inventory, Random rand, LootContext context) {
-        List var4 = this.generateLootForPools(rand, context);
+        List<ItemStack> var4 = this.generateLootForPools(rand, context); // Paper - fix decompile
         List var5 = this.getEmptySlotsRandomized(inventory, rand);
         this.shuffleItems(var4, var5.size(), rand);
 
diff --git a/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasProperty.java b/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasProperty.java
index 28d052a..3735fcf 100644
--- a/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasProperty.java
+++ b/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasProperty.java
@@ -57,7 +57,7 @@ public class EntityHasProperty implements LootCondition {
         }
 
         public EntityHasProperty deserialize(JsonObject json, JsonDeserializationContext context) {
-            Set var3 = JsonUtils.getJsonObject(json, "properties").entrySet();
+            Set<Entry<String, JsonElement>> var3 = JsonUtils.getJsonObject(json, "properties").entrySet(); // Paper - fix decompile
             EntityProperty[] var4 = new EntityProperty[var3.size()];
             int var5 = 0;
 
diff --git a/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasScore.java b/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasScore.java
index 512c2b3..0a9c5d4 100644
--- a/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasScore.java
+++ b/src/main/java/net/minecraft/world/storage/loot/conditions/EntityHasScore.java
@@ -74,7 +74,7 @@ public class EntityHasScore implements LootCondition {
         }
 
         public EntityHasScore deserialize(JsonObject json, JsonDeserializationContext context) {
-            Set var3 = JsonUtils.getJsonObject(json, "scores").entrySet();
+            Set<Entry<String, JsonElement>> var3 = JsonUtils.getJsonObject(json, "scores").entrySet(); // Paper - fix decompile
             LinkedHashMap var4 = Maps.newLinkedHashMap();
 
             for (Entry var6 : var3) {
-- 
2.12.1

