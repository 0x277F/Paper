From 383453a0bc6b5cfb2ae0d598612d66aefadfbc9f Mon Sep 17 00:00:00 2001
From: Joseph Hirschfeld <joe@ibj.io>
Date: Thu, 3 Mar 2016 02:39:54 -0600
Subject: [PATCH] Change implementation of (tile)entity removal list


diff --git a/src/main/java/net/minecraft/world/World.java b/src/main/java/net/minecraft/world/World.java
index e5d0637..835ae9f 100644
--- a/src/main/java/net/minecraft/world/World.java
+++ b/src/main/java/net/minecraft/world/World.java
@@ -13,8 +13,11 @@ import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
 import java.util.Random;
+import java.util.Set;
 import java.util.UUID;
 import javax.annotation.Nullable;
+
+import com.google.common.collect.Sets;
 import net.minecraft.block.Block;
 import net.minecraft.block.BlockLiquid;
 import net.minecraft.block.BlockObserver;
@@ -112,11 +115,11 @@ public abstract class World implements IBlockAccess {
             }
         }
     };
-    protected final List<Entity> unloadedEntityList = Lists.<Entity>newArrayList();
+    protected final Set<Entity> unloadedEntityList = Sets.newHashSet(); // Paper - Set based removal lists
     public final List<TileEntity> loadedTileEntityList = Lists.<TileEntity>newArrayList();
     public final List<TileEntity> tickableTileEntities = Lists.<TileEntity>newArrayList();
     private final List<TileEntity> addedTileEntityList = Lists.<TileEntity>newArrayList();
-    private final List<TileEntity> tileEntitiesToBeRemoved = Lists.<TileEntity>newArrayList();
+    private final Set<TileEntity> tileEntitiesToBeRemoved = Sets.newHashSet(); // Paper - Set based removal lists
     public final List<EntityPlayer> playerEntities = Lists.<EntityPlayer>newArrayList();
     public final List<Entity> weatherEffects = Lists.<Entity>newArrayList();
     protected final IntHashMap<Entity> entitiesById = new IntHashMap();
@@ -1502,18 +1505,15 @@ public abstract class World implements IBlockAccess {
         timings.entityRemoval.startTiming(); // Paper
         this.loadedEntityList.removeAll(this.unloadedEntityList);
 
-        for (int var20 = 0; var20 < this.unloadedEntityList.size(); ++var20) {
-            Entity entity = (Entity)this.unloadedEntityList.get(var20);
+        for (Entity entity : this.unloadedEntityList) { // Paper - Set based removal lists
             int k = entity.chunkCoordX;
             int j = entity.chunkCoordZ;
 
             if (entity.addedToChunk && this.isChunkLoaded(k, j, true)) {
                 this.getChunkFromChunkCoords(k, j).removeEntity(entity);
             }
-        }
 
-        for (int var21 = 0; var21 < this.unloadedEntityList.size(); ++var21) {
-            this.onEntityRemoved((Entity)this.unloadedEntityList.get(var21));
+            this.onEntityRemoved(entity); // Paper - Set based removal lists
         }
 
         this.unloadedEntityList.clear();
-- 
2.12.1.windows.1

