From e520d553b565684f18ff2ca825da7ade9f392907 Mon Sep 17 00:00:00 2001
From: DemonWav <demonwav@gmail.com>
Date: Sun, 2 Apr 2017 22:59:12 -0500
Subject: [PATCH] More decompile issues fixed


diff --git a/src/main/java/net/minecraft/crash/CrashReport.java b/src/main/java/net/minecraft/crash/CrashReport.java
index d498670..0685d2f 100644
--- a/src/main/java/net/minecraft/crash/CrashReport.java
+++ b/src/main/java/net/minecraft/crash/CrashReport.java
@@ -95,7 +95,7 @@ public class CrashReport {
         this.theReportCategory.setDetail("JVM Flags", new ICrashReportDetail() {
             public String call() {
                 RuntimeMXBean runtimemxbean = ManagementFactory.getRuntimeMXBean();
-                List list = runtimemxbean.getInputArguments();
+                List<String> list = runtimemxbean.getInputArguments(); // Paper - fix decompile
                 int i = 0;
                 StringBuilder stringbuilder = new StringBuilder();
 
@@ -123,7 +123,7 @@ public class CrashReport {
                 return this.call();
             }
         });
-        this.theReportCategory.setDetail("CraftBukkit Information", new CraftCrashReport());
+        this.theReportCategory.setDetail("CraftBukkit Information", (ICrashReportDetail) new CraftCrashReport()); // Paper - fix decompile
     }
 
     /**
diff --git a/src/main/java/net/minecraft/entity/passive/EntityAnimal.java b/src/main/java/net/minecraft/entity/passive/EntityAnimal.java
index 1becccc..f3d8109 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityAnimal.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityAnimal.java
@@ -102,7 +102,7 @@ public abstract class EntityAnimal extends EntityAgeable implements IAnimals {
     /**
      * Determines if an entity can be despawned, used on idle far away entities
      */
-    protected boolean canDespawn() {
+    public boolean canDespawn() { // Paper - fix decompile
         return false;
     }
 
diff --git a/src/main/java/net/minecraft/entity/passive/EntityChicken.java b/src/main/java/net/minecraft/entity/passive/EntityChicken.java
index 78f456f..80de0e1 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityChicken.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityChicken.java
@@ -178,7 +178,7 @@ public class EntityChicken extends EntityAnimal {
     /**
      * Determines if an entity can be despawned, used on idle far away entities
      */
-    protected boolean canDespawn() {
+    public boolean canDespawn() { // Paper - fix decompile
         return this.isChickenJockey() && !this.isBeingRidden();
     }
 
@@ -209,7 +209,9 @@ public class EntityChicken extends EntityAnimal {
         this.chickenJockey = jockey;
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 }
diff --git a/src/main/java/net/minecraft/entity/passive/EntityCow.java b/src/main/java/net/minecraft/entity/passive/EntityCow.java
index 1ac86d3..0e721ae 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityCow.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityCow.java
@@ -120,7 +120,9 @@ public class EntityCow extends EntityAnimal {
         return this.isChild() ? this.height : 1.3F;
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 }
diff --git a/src/main/java/net/minecraft/entity/passive/EntityMooshroom.java b/src/main/java/net/minecraft/entity/passive/EntityMooshroom.java
index 1a87a69..7ee8f9d 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityMooshroom.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityMooshroom.java
@@ -88,6 +88,7 @@ public class EntityMooshroom extends EntityCow {
         return LootTableList.ENTITIES_MUSHROOM_COW;
     }
 
+    /* // Paper - fix decompile start
     public EntityCow createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
@@ -95,4 +96,5 @@ public class EntityMooshroom extends EntityCow {
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 }
diff --git a/src/main/java/net/minecraft/entity/passive/EntityOcelot.java b/src/main/java/net/minecraft/entity/passive/EntityOcelot.java
index a61d249..dc37736 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityOcelot.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityOcelot.java
@@ -100,7 +100,7 @@ public class EntityOcelot extends EntityTameable {
     /**
      * Determines if an entity can be despawned, used on idle far away entities
      */
-    protected boolean canDespawn() {
+    public boolean canDespawn() { // Paper - fix decompile
         return !this.isTamed();
     }
 
@@ -306,7 +306,9 @@ public class EntityOcelot extends EntityTameable {
         return livingdata;
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 }
diff --git a/src/main/java/net/minecraft/entity/passive/EntityPig.java b/src/main/java/net/minecraft/entity/passive/EntityPig.java
index b286ce3..0ba1dc7 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityPig.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityPig.java
@@ -305,7 +305,9 @@ public class EntityPig extends EntityAnimal {
         return TEMPTATION_ITEMS.contains(stack.getItem());
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 }
diff --git a/src/main/java/net/minecraft/entity/passive/EntityRabbit.java b/src/main/java/net/minecraft/entity/passive/EntityRabbit.java
index 25e42dd..df3e974 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityRabbit.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityRabbit.java
@@ -411,9 +411,11 @@ public class EntityRabbit extends EntityAnimal {
         this.carrotTicks = 40;
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 
     static class AIAvoidEntity<T extends Entity> extends EntityAIAvoidEntity<T> {
         private final EntityRabbit entityInstance;
diff --git a/src/main/java/net/minecraft/entity/passive/EntitySheep.java b/src/main/java/net/minecraft/entity/passive/EntitySheep.java
index 26823da..136c2be 100644
--- a/src/main/java/net/minecraft/entity/passive/EntitySheep.java
+++ b/src/main/java/net/minecraft/entity/passive/EntitySheep.java
@@ -341,9 +341,11 @@ public class EntitySheep extends EntityAnimal {
         return 0.95F * this.height;
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 
     static {
         DYE_TO_RGB.put(EnumDyeColor.WHITE, new float[] {1.0F, 1.0F, 1.0F});
diff --git a/src/main/java/net/minecraft/entity/passive/EntityVillager.java b/src/main/java/net/minecraft/entity/passive/EntityVillager.java
index b779e16..14ac417 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityVillager.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityVillager.java
@@ -357,7 +357,7 @@ public class EntityVillager extends EntityAgeable implements INpc, IMerchant {
     /**
      * Determines if an entity can be despawned, used on idle far away entities
      */
-    protected boolean canDespawn() {
+    public boolean canDespawn() { // Paper - fix decompile
         return false;
     }
 
@@ -834,9 +834,11 @@ public class EntityVillager extends EntityAgeable implements INpc, IMerchant {
         }
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 
     static class EmeraldForItems implements EntityVillager.ITradeList {
         public Item buyingItem;
diff --git a/src/main/java/net/minecraft/entity/passive/EntityWolf.java b/src/main/java/net/minecraft/entity/passive/EntityWolf.java
index f8b74e2..8c91529 100644
--- a/src/main/java/net/minecraft/entity/passive/EntityWolf.java
+++ b/src/main/java/net/minecraft/entity/passive/EntityWolf.java
@@ -491,9 +491,11 @@ public class EntityWolf extends EntityTameable {
         return !this.isAngry() && super.canBeLeashedTo(player);
     }
 
+    /* // Paper - fix decompile start
     public EntityAgeable createChild(EntityAgeable ageable) {
         return this.createChild(ageable);
     }
+    // Paper - fix decompile end */
 
     class AIAvoidEntity<T extends Entity> extends EntityAIAvoidEntity<T> {
         private final EntityWolf wolf;
diff --git a/src/main/java/org/bukkit/craftbukkit/help/SimpleHelpMap.java b/src/main/java/org/bukkit/craftbukkit/help/SimpleHelpMap.java
index 5546fb8..42cbcc1 100644
--- a/src/main/java/org/bukkit/craftbukkit/help/SimpleHelpMap.java
+++ b/src/main/java/org/bukkit/craftbukkit/help/SimpleHelpMap.java
@@ -41,7 +41,7 @@ public class SimpleHelpMap implements HelpMap {
         Predicate indexFilter = Predicates.not(Predicates.instanceOf(CommandAliasHelpTopic.class));
 
         if (!this.yaml.commandTopicsInMasterIndex()) {
-            indexFilter = Predicates.and(indexFilter, Predicates.<T>not(new SimpleHelpMap.IsCommandTopicPredicate()));
+            indexFilter = Predicates.and(indexFilter, Predicates.not(new SimpleHelpMap.IsCommandTopicPredicate())); // Paper - fix decompile
         }
 
         this.defaultTopic = new IndexHelpTopic("Index", (String)null, (String)null, Collections2.filter(this.helpTopics.values(), indexFilter), "Use /help [n] to get page n of help.");
-- 
2.12.1

