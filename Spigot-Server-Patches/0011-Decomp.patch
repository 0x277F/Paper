From 13c2fc259f56f9dcd876cf82c3146edd0a46e49b Mon Sep 17 00:00:00 2001
From: DemonWav <demonwav@gmail.com>
Date: Mon, 3 Apr 2017 00:28:20 -0500
Subject: [PATCH] Decomp


diff --git a/src/main/java/net/minecraft/entity/SharedMonsterAttributes.java b/src/main/java/net/minecraft/entity/SharedMonsterAttributes.java
index e56c037..b92ec7e 100644
--- a/src/main/java/net/minecraft/entity/SharedMonsterAttributes.java
+++ b/src/main/java/net/minecraft/entity/SharedMonsterAttributes.java
@@ -47,7 +47,7 @@ public class SharedMonsterAttributes {
         IAttribute iattribute = instance.getAttribute();
         nbttagcompound.setString("Name", iattribute.getName());
         nbttagcompound.setDouble("Base", instance.getBaseValue());
-        Collection collection = instance.getModifiers();
+        Collection<AttributeModifier> collection = instance.getModifiers(); // Paper - fix decompile
 
         if (collection != null && !collection.isEmpty()) {
             NBTTagList nbttaglist = new NBTTagList();
diff --git a/src/main/java/net/minecraft/entity/ai/EntityAILlamaFollowCaravan.java b/src/main/java/net/minecraft/entity/ai/EntityAILlamaFollowCaravan.java
index c13fcd3..375cda1 100644
--- a/src/main/java/net/minecraft/entity/ai/EntityAILlamaFollowCaravan.java
+++ b/src/main/java/net/minecraft/entity/ai/EntityAILlamaFollowCaravan.java
@@ -20,7 +20,7 @@ public class EntityAILlamaFollowCaravan extends EntityAIBase {
      */
     public boolean shouldExecute() {
         if (!this.llama.getLeashed() && !this.llama.inCaravan()) {
-            List var1 = this.llama.world.getEntitiesWithinAABB(this.llama.getClass(), this.llama.getEntityBoundingBox().expand(9.0D, 4.0D, 9.0D));
+            List<EntityLlama> var1 = this.llama.world.getEntitiesWithinAABB(this.llama.getClass(), this.llama.getEntityBoundingBox().expand(9.0D, 4.0D, 9.0D)); // Paper - fix decompile
             EntityLlama var2 = null;
             double var3 = Double.MAX_VALUE;
 
diff --git a/src/main/java/net/minecraft/entity/ai/EntityAIMate.java b/src/main/java/net/minecraft/entity/ai/EntityAIMate.java
index 3aeb686..fcb5bfd 100644
--- a/src/main/java/net/minecraft/entity/ai/EntityAIMate.java
+++ b/src/main/java/net/minecraft/entity/ai/EntityAIMate.java
@@ -83,7 +83,7 @@ public class EntityAIMate extends EntityAIBase {
      * valid mate found.
      */
     private EntityAnimal getNearbyMate() {
-        List list = this.world.getEntitiesWithinAABB(this.mateClass, this.theAnimal.getEntityBoundingBox().expandXyz(8.0D));
+        List<EntityAnimal> list = this.world.getEntitiesWithinAABB(this.mateClass, this.theAnimal.getEntityBoundingBox().expandXyz(8.0D)); // Paper - fix decompile
         double d0 = Double.MAX_VALUE;
         EntityAnimal entityanimal = null;
 
diff --git a/src/main/java/net/minecraft/entity/monster/EntityCreeper.java b/src/main/java/net/minecraft/entity/monster/EntityCreeper.java
index 5ee552c..3254745 100644
--- a/src/main/java/net/minecraft/entity/monster/EntityCreeper.java
+++ b/src/main/java/net/minecraft/entity/monster/EntityCreeper.java
@@ -281,7 +281,7 @@ public class EntityCreeper extends EntityMob {
     }
 
     private void spawnLingeringCloud() {
-        Collection collection = this.getActivePotionEffects();
+        Collection<PotionEffect> collection = this.getActivePotionEffects(); // Paper - fix decompile
 
         if (!collection.isEmpty()) {
             EntityAreaEffectCloud entityareaeffectcloud = new EntityAreaEffectCloud(this.world, this.posX, this.posY, this.posZ);
diff --git a/src/main/java/net/minecraft/entity/monster/EntityElderGuardian.java b/src/main/java/net/minecraft/entity/monster/EntityElderGuardian.java
index 48d14c3..8ab5be3 100644
--- a/src/main/java/net/minecraft/entity/monster/EntityElderGuardian.java
+++ b/src/main/java/net/minecraft/entity/monster/EntityElderGuardian.java
@@ -29,7 +29,7 @@ public class EntityElderGuardian extends EntityGuardian {
         }
     }
 
-    protected void applyEntityAttributes() {
+    public void applyEntityAttributes() { // Paper - fix decompile
         super.applyEntityAttributes();
         this.getEntityAttribute(SharedMonsterAttributes.MOVEMENT_SPEED).setBaseValue(0.30000001192092896D);
         this.getEntityAttribute(SharedMonsterAttributes.ATTACK_DAMAGE).setBaseValue(8.0D);
@@ -71,7 +71,7 @@ public class EntityElderGuardian extends EntityGuardian {
 
         if ((this.ticksExisted + this.getEntityId()) % 1200 == 0) {
             Potion var2 = MobEffects.MINING_FATIGUE;
-            List var3 = this.world.getPlayers(EntityPlayerMP.class, new Predicate<EntityPlayerMP>() {
+            List<EntityPlayerMP> var3 = this.world.getPlayers(EntityPlayerMP.class, new Predicate<EntityPlayerMP>() { // Paper - fix decompile
                 public boolean apply(@Nullable EntityPlayerMP var1) {
                     return EntityElderGuardian.this.getDistanceSqToEntity(var1) < 2500.0D && var1.interactionManager.survivalOrAdventure();
                 }
diff --git a/src/main/java/net/minecraft/entity/monster/EntityShulker.java b/src/main/java/net/minecraft/entity/monster/EntityShulker.java
index e422562..3e157b4 100644
--- a/src/main/java/net/minecraft/entity/monster/EntityShulker.java
+++ b/src/main/java/net/minecraft/entity/monster/EntityShulker.java
@@ -161,9 +161,9 @@ public class EntityShulker extends EntityGolem implements IMob {
             int var2 = compound.getInteger("APX");
             int var3 = compound.getInteger("APY");
             int var4 = compound.getInteger("APZ");
-            this.dataManager.set(ATTACHED_BLOCK_POS, Optional.<T>of(new BlockPos(var2, var3, var4)));
+            this.dataManager.set(ATTACHED_BLOCK_POS, Optional.of(new BlockPos(var2, var3, var4))); // Paper - fix decompile
         } else {
-            this.dataManager.set(ATTACHED_BLOCK_POS, Optional.<T>absent());
+            this.dataManager.set(ATTACHED_BLOCK_POS, Optional.absent()); // Paper - fix decompile
         }
     }
 
@@ -193,7 +193,7 @@ public class EntityShulker extends EntityGolem implements IMob {
 
         if (var1 == null && !this.world.isRemote) {
             var1 = new BlockPos(this);
-            this.dataManager.set(ATTACHED_BLOCK_POS, Optional.<T>of(var1));
+            this.dataManager.set(ATTACHED_BLOCK_POS, Optional.of(var1)); // Paper - fix decompile
         }
 
         if (this.isRiding()) {
@@ -212,7 +212,7 @@ public class EntityShulker extends EntityGolem implements IMob {
 
                     if (this.world.isAirBlock(var1.offset(var3))) {
                         var1 = var1.offset(var3);
-                        this.dataManager.set(ATTACHED_BLOCK_POS, Optional.<T>of(var1));
+                        this.dataManager.set(ATTACHED_BLOCK_POS, Optional.of(var1)); // Paper - fix decompile
                     } else {
                         this.tryTeleportToNewPosition();
                     }
@@ -221,7 +221,7 @@ public class EntityShulker extends EntityGolem implements IMob {
 
                     if (this.world.isAirBlock(var1.offset(var21))) {
                         var1 = var1.offset(var21);
-                        this.dataManager.set(ATTACHED_BLOCK_POS, Optional.<T>of(var1));
+                        this.dataManager.set(ATTACHED_BLOCK_POS, Optional.of(var1)); // Paper - fix decompile
                     } else {
                         this.tryTeleportToNewPosition();
                     }
@@ -319,10 +319,10 @@ public class EntityShulker extends EntityGolem implements IMob {
             }
 
             if (var27 > 0.0D) {
-                List var16 = this.world.getEntitiesWithinAABBExcludingEntity(this, this.getEntityBoundingBox());
+                List<Entity> var16 = this.world.getEntitiesWithinAABBExcludingEntity(this, this.getEntityBoundingBox());
 
                 if (!var16.isEmpty()) {
-                    for (Entity var18 : var16) {
+                    for (Entity var18 : var16) { // Paper - fix decompile
                         if (!(var18 instanceof EntityShulker) && !var18.noClip) {
                             var18.move(MoverType.SHULKER, var9, var11, var13);
                         }
@@ -381,7 +381,7 @@ public class EntityShulker extends EntityGolem implements IMob {
 
                     if (var4) {
                         this.playSound(SoundEvents.ENTITY_SHULKER_TELEPORT, 1.0F, 1.0F);
-                        this.dataManager.set(ATTACHED_BLOCK_POS, Optional.<T>of(var3));
+                        this.dataManager.set(ATTACHED_BLOCK_POS, Optional.of(var3)); // Paper - fix decompile
                         this.dataManager.set(PEEK_TICK, Byte.valueOf((byte)0));
                         this.setAttackTarget((EntityLivingBase)null);
                         return true;
diff --git a/src/main/java/net/minecraft/entity/projectile/EntityTippedArrow.java b/src/main/java/net/minecraft/entity/projectile/EntityTippedArrow.java
index ab7f709..b5cb1b6 100644
--- a/src/main/java/net/minecraft/entity/projectile/EntityTippedArrow.java
+++ b/src/main/java/net/minecraft/entity/projectile/EntityTippedArrow.java
@@ -40,7 +40,7 @@ public class EntityTippedArrow extends EntityArrow {
     public void setPotionEffect(ItemStack stack) {
         if (stack.getItem() == Items.TIPPED_ARROW) {
             this.potion = PotionUtils.getPotionTypeFromNBT(stack.getTagCompound());
-            List list = PotionUtils.getFullEffectsFromItem(stack);
+            List<PotionEffect> list = PotionUtils.getFullEffectsFromItem(stack); // Paper - fix decompile
 
             if (!list.isEmpty()) {
                 for (PotionEffect mobeffect : list) {
diff --git a/src/main/java/net/minecraft/item/ItemMonsterPlacer.java b/src/main/java/net/minecraft/item/ItemMonsterPlacer.java
index 93106aa..badb846 100644
--- a/src/main/java/net/minecraft/item/ItemMonsterPlacer.java
+++ b/src/main/java/net/minecraft/item/ItemMonsterPlacer.java
@@ -103,7 +103,7 @@ public class ItemMonsterPlacer extends Item {
 
     protected double getYOffset(World p_190909_1_, BlockPos p_190909_2_) {
         AxisAlignedBB axisalignedbb = (new AxisAlignedBB(p_190909_2_)).addCoord(0.0D, -1.0D, 0.0D);
-        List list = p_190909_1_.getCollisionBoxes((Entity)null, axisalignedbb);
+        List<AxisAlignedBB> list = p_190909_1_.getCollisionBoxes((Entity)null, axisalignedbb); // Paper - fix decompile
 
         if (list.isEmpty()) {
             return 0.0D;
diff --git a/src/main/java/net/minecraft/pathfinding/WalkNodeProcessor.java b/src/main/java/net/minecraft/pathfinding/WalkNodeProcessor.java
index ea34e95..d077c33 100644
--- a/src/main/java/net/minecraft/pathfinding/WalkNodeProcessor.java
+++ b/src/main/java/net/minecraft/pathfinding/WalkNodeProcessor.java
@@ -65,7 +65,7 @@ public class WalkNodeProcessor extends NodeProcessor {
         PathNodeType var10 = this.getPathNodeType(this.entity, var9.getX(), var1, var9.getZ());
 
         if (this.entity.getPathPriority(var10) < 0.0F) {
-            HashSet var4 = Sets.newHashSet();
+            HashSet<BlockPos> var4 = Sets.newHashSet(); // Paper - fix decompile
             var4.add(new BlockPos(this.entity.getEntityBoundingBox().minX, (double)var1, this.entity.getEntityBoundingBox().minZ));
             var4.add(new BlockPos(this.entity.getEntityBoundingBox().minX, (double)var1, this.entity.getEntityBoundingBox().maxZ));
             var4.add(new BlockPos(this.entity.getEntityBoundingBox().maxX, (double)var1, this.entity.getEntityBoundingBox().minZ));
@@ -253,7 +253,7 @@ public class WalkNodeProcessor extends NodeProcessor {
     }
 
     public PathNodeType getPathNodeType(IBlockAccess blockaccessIn, int x, int y, int z, EntityLiving entitylivingIn, int xSize, int ySize, int zSize, boolean canBreakDoorsIn, boolean canEnterDoorsIn) {
-        EnumSet var11 = EnumSet.noneOf(PathNodeType.class);
+        EnumSet<PathNodeType> var11 = EnumSet.noneOf(PathNodeType.class); // Paper - fix decompile
         PathNodeType var12 = PathNodeType.BLOCKED;
         double var13 = (double)entitylivingIn.width / 2.0D;
         BlockPos var15 = new BlockPos(entitylivingIn);
diff --git a/src/main/java/net/minecraft/server/management/PlayerList.java b/src/main/java/net/minecraft/server/management/PlayerList.java
index 651ea73..1eb8d36 100644
--- a/src/main/java/net/minecraft/server/management/PlayerList.java
+++ b/src/main/java/net/minecraft/server/management/PlayerList.java
@@ -440,7 +440,7 @@ public abstract class PlayerList {
 
     public EntityPlayerMP attemptLogin(NetHandlerLoginServer loginlistener, GameProfile gameprofile, String hostname) {
         UUID uuid = EntityPlayer.getUUID(gameprofile);
-        ArrayList arraylist = Lists.newArrayList();
+        ArrayList<EntityPlayerMP> arraylist = Lists.newArrayList(); // Paper - fix decompile
 
         for (int i = 0; i < this.playerEntityList.size(); ++i) {
             EntityPlayerMP entityplayer = (EntityPlayerMP)this.playerEntityList.get(i);
diff --git a/src/main/java/net/minecraft/server/management/PlayerProfileCache.java b/src/main/java/net/minecraft/server/management/PlayerProfileCache.java
index e8fbfb6..e871e8a 100644
--- a/src/main/java/net/minecraft/server/management/PlayerProfileCache.java
+++ b/src/main/java/net/minecraft/server/management/PlayerProfileCache.java
@@ -217,7 +217,7 @@ public class PlayerProfileCache {
 
         try {
             bufferedreader = Files.newReader(this.usercacheFile, Charsets.UTF_8);
-            List list = (List)this.gson.fromJson((Reader)bufferedreader, TYPE);
+            List<PlayerProfileCache.ProfileEntry> list = (List)this.gson.fromJson((Reader)bufferedreader, TYPE); // Paper - fix decompile
             this.usernameToProfileEntryMap.clear();
             this.uuidToProfileEntryMap.clear();
             this.gameProfiles.clear();
diff --git a/src/main/java/net/minecraft/server/management/PreYggdrasilConverter.java b/src/main/java/net/minecraft/server/management/PreYggdrasilConverter.java
index 2e3ad88..bd805a3 100644
--- a/src/main/java/net/minecraft/server/management/PreYggdrasilConverter.java
+++ b/src/main/java/net/minecraft/server/management/PreYggdrasilConverter.java
@@ -43,7 +43,7 @@ public class PreYggdrasilConverter {
     public static final File OLD_WHITELIST_FILE = new File("white-list.txt");
 
     static List<String> readFile(File inFile, Map<String, String[]> read) throws IOException {
-        List list = Files.readLines(inFile, Charsets.UTF_8);
+    List<String> list = Files.readLines(inFile, Charsets.UTF_8); // Paper - fix decompile
 
         for (String s : list) {
             s = s.trim();
@@ -146,7 +146,7 @@ public class PreYggdrasilConverter {
             }
 
             try {
-                HashMap hashmap = Maps.newHashMap();
+            HashMap<String, String[]> hashmap = Maps.newHashMap(); // Paper - fix decompile
                 readFile(OLD_IPBAN_FILE, hashmap);
 
                 for (String s : hashmap.keySet()) {
diff --git a/src/main/java/net/minecraft/server/management/UserList.java b/src/main/java/net/minecraft/server/management/UserList.java
index 133d00d..58942af 100644
--- a/src/main/java/net/minecraft/server/management/UserList.java
+++ b/src/main/java/net/minecraft/server/management/UserList.java
@@ -160,7 +160,7 @@ public class UserList<K, V extends UserListEntry<K>> {
     }
 
     public void readSavedFile() throws IOException, FileNotFoundException {
-        Collection collection = null;
+        Collection<UserListEntry> collection = null; // Paper - fix decompile
         BufferedReader bufferedreader = null;
 
         try {
@@ -182,7 +182,7 @@ public class UserList<K, V extends UserListEntry<K>> {
 
             for (UserListEntry jsonlistentry : collection) {
                 if (jsonlistentry.getValue() != null) {
-                    this.values.put(this.getObjectKey(jsonlistentry.getValue()), jsonlistentry);
+                    this.values.put(this.getObjectKey((K) jsonlistentry.getValue()), (V) jsonlistentry); // Paper - fix decompile
                 }
             }
         }
-- 
2.12.1

