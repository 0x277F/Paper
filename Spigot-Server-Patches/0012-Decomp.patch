From 258d9dd757f7edef7e9bca989085941ac61b070b Mon Sep 17 00:00:00 2001
From: DemonWav <demonwav@gmail.com>
Date: Mon, 3 Apr 2017 00:47:02 -0500
Subject: [PATCH] Decomp


diff --git a/src/main/java/net/minecraft/stats/StatList.java b/src/main/java/net/minecraft/stats/StatList.java
index fa53d9e..0cf4db1 100644
--- a/src/main/java/net/minecraft/stats/StatList.java
+++ b/src/main/java/net/minecraft/stats/StatList.java
@@ -138,7 +138,7 @@ public class StatList {
      * initialized.
      */
     private static void initCraftableStats() {
-        HashSet var0 = Sets.newHashSet();
+        HashSet<Item> var0 = Sets.newHashSet(); // Paper - fix decompile
 
         for (IRecipe var2 : CraftingManager.getInstance().getRecipeList()) {
             ItemStack var3 = var2.getRecipeOutput();
diff --git a/src/main/java/net/minecraft/tileentity/TileEntityBeacon.java b/src/main/java/net/minecraft/tileentity/TileEntityBeacon.java
index 7ab4432..ab9b216 100644
--- a/src/main/java/net/minecraft/tileentity/TileEntityBeacon.java
+++ b/src/main/java/net/minecraft/tileentity/TileEntityBeacon.java
@@ -125,7 +125,7 @@ public class TileEntityBeacon extends TileEntityLockable implements ITickable, I
         return list;
     }
 
-    private void applyEffect(List list, Potion effects, int i, int b0) {
+    private void applyEffect(List<EntityPlayer> list, Potion effects, int i, int b0) { // Paper - fix decompile
         for (EntityPlayer entityhuman : list) {
             entityhuman.addPotionEffect(new net.minecraft.potion.PotionEffect(effects, i, b0, true, true));
         }
diff --git a/src/main/java/net/minecraft/util/ClassInheritanceMultiMap.java b/src/main/java/net/minecraft/util/ClassInheritanceMultiMap.java
index 1198711..7f00bd1 100644
--- a/src/main/java/net/minecraft/util/ClassInheritanceMultiMap.java
+++ b/src/main/java/net/minecraft/util/ClassInheritanceMultiMap.java
@@ -32,7 +32,7 @@ public class ClassInheritanceMultiMap<T> extends AbstractSet<T> {
 
         for (Object object : this.values) {
             if (clazz.isAssignableFrom(object.getClass())) {
-                this.addForClass(object, clazz);
+                this.addForClass((T) object, clazz); // Paper - fix decompile
             }
         }
 
@@ -65,7 +65,7 @@ public class ClassInheritanceMultiMap<T> extends AbstractSet<T> {
         List list = (List)this.map.get(parentClass);
 
         if (list == null) {
-            this.map.put(parentClass, Lists.newArrayList(new Object[] {value}));
+            this.map.put(parentClass, Lists.newArrayList((T[]) new Object[] {value})); // Paper - fix decompile
         } else {
             list.add(value);
         }
diff --git a/src/main/java/net/minecraft/util/EntitySelectors.java b/src/main/java/net/minecraft/util/EntitySelectors.java
index e61cdfb..37c849a 100644
--- a/src/main/java/net/minecraft/util/EntitySelectors.java
+++ b/src/main/java/net/minecraft/util/EntitySelectors.java
@@ -70,7 +70,7 @@ public final class EntitySelectors {
                 }
             }
         });
-        return (Predicate<T>)ret;
+//        return (Predicate<T>)ret; // Paper - fix decompile
     }
 
     public static Predicate<Entity> notRiding(final Entity p_191324_0_) {
diff --git a/src/main/java/net/minecraft/util/IntHashMap.java b/src/main/java/net/minecraft/util/IntHashMap.java
index 3f55d75..3ddaf11 100644
--- a/src/main/java/net/minecraft/util/IntHashMap.java
+++ b/src/main/java/net/minecraft/util/IntHashMap.java
@@ -35,7 +35,7 @@ public class IntHashMap<V> {
 
         for (IntHashMap.Entry var3 = this.slots[getSlotIndex(var2, this.slots.length)]; var3 != null; var3 = var3.nextEntry) {
             if (var3.hashEntry == hashEntry) {
-                return var3.valueEntry;
+                return (V) var3.valueEntry; // Paper - fix decompile
             }
         }
 
diff --git a/src/main/java/net/minecraft/util/IntIdentityHashBiMap.java b/src/main/java/net/minecraft/util/IntIdentityHashBiMap.java
index 59cda26..02d3586 100644
--- a/src/main/java/net/minecraft/util/IntIdentityHashBiMap.java
+++ b/src/main/java/net/minecraft/util/IntIdentityHashBiMap.java
@@ -57,15 +57,15 @@ public class IntIdentityHashBiMap<K> implements IObjectIntIterable<K> {
     private void grow(int capacity) {
         Object[] var2 = this.values;
         int[] var3 = this.intKeys;
-        this.values = (Object[])(new Object[capacity]);
+        this.values = (K[])(new Object[capacity]); // Paper - fix decompile
         this.intKeys = new int[capacity];
-        this.byId = (Object[])(new Object[capacity]);
+        this.byId = (K[])(new Object[capacity]); // Paper - fix decompile
         this.nextFreeIndex = 0;
         this.mapSize = 0;
 
         for (int var4 = 0; var4 < var2.length; ++var4) {
             if (var2[var4] != null) {
-                this.put(var2[var4], var3[var4]);
+                this.put((K) var2[var4], var3[var4]); // Paper - fix decompile
             }
         }
     }
diff --git a/src/main/java/net/minecraft/util/LowerStringMap.java b/src/main/java/net/minecraft/util/LowerStringMap.java
index 059147f..fb48b2c 100644
--- a/src/main/java/net/minecraft/util/LowerStringMap.java
+++ b/src/main/java/net/minecraft/util/LowerStringMap.java
@@ -40,7 +40,7 @@ public class LowerStringMap<V> implements Map<String, V> {
 
     public void putAll(Map <? extends String, ? extends V > var1) {
         for (Entry var3 : var1.entrySet()) {
-            this.put((String)var3.getKey(), var3.getValue());
+            this.put((String)var3.getKey(), (V) var3.getValue()); // Paper - fix decompile
         }
     }
 
diff --git a/src/main/java/net/minecraft/util/MapPopulator.java b/src/main/java/net/minecraft/util/MapPopulator.java
index ed9db61..e9fb7a0 100644
--- a/src/main/java/net/minecraft/util/MapPopulator.java
+++ b/src/main/java/net/minecraft/util/MapPopulator.java
@@ -17,7 +17,7 @@ public class MapPopulator {
         Iterator var3 = values.iterator();
 
         for (Object var5 : keys) {
-            map.put(var5, var3.next());
+            map.put((K) var5, (V) var3.next()); // Paper - fix decompile
         }
 
         if (var3.hasNext()) {
diff --git a/src/main/java/net/minecraft/util/math/Cartesian.java b/src/main/java/net/minecraft/util/math/Cartesian.java
index 7adc354..b406c24 100644
--- a/src/main/java/net/minecraft/util/math/Cartesian.java
+++ b/src/main/java/net/minecraft/util/math/Cartesian.java
@@ -48,7 +48,7 @@ public class Cartesian {
         }
 
         public List<T> apply(@Nullable Object[] var1) {
-            return Arrays.<T>asList((Object[])var1);
+            return Arrays.<T>asList((T[])var1); // Paper - fix decompile
         }
     }
 
diff --git a/src/main/java/net/minecraft/world/biome/BiomeEndDecorator.java b/src/main/java/net/minecraft/world/biome/BiomeEndDecorator.java
index 4f5285f..61c5a09 100644
--- a/src/main/java/net/minecraft/world/biome/BiomeEndDecorator.java
+++ b/src/main/java/net/minecraft/world/biome/BiomeEndDecorator.java
@@ -42,7 +42,7 @@ public class BiomeEndDecorator extends BiomeDecorator {
         }
 
         public WorldGenSpikes.EndSpike[] load(Long var1) throws Exception {
-            ArrayList var2 = Lists.newArrayList(ContiguousSet.create(Range.<C>closedOpen(Integer.valueOf(0), Integer.valueOf(10)), DiscreteDomain.integers()));
+            ArrayList var2 = Lists.newArrayList(ContiguousSet.create(Range.closedOpen(Integer.valueOf(0), Integer.valueOf(10)), DiscreteDomain.integers())); // Paper - fix decompile
             Collections.shuffle(var2, new Random(var1.longValue()));
             WorldGenSpikes.EndSpike[] var3 = new WorldGenSpikes.EndSpike[10];
 
diff --git a/src/main/java/net/minecraft/world/chunk/Chunk.java b/src/main/java/net/minecraft/world/chunk/Chunk.java
index 3ac8ada..1d9707b 100644
--- a/src/main/java/net/minecraft/world/chunk/Chunk.java
+++ b/src/main/java/net/minecraft/world/chunk/Chunk.java
@@ -896,8 +896,8 @@ public class Chunk {
 
         for (int k = i; k <= j; ++k) {
             for (Entity entity : this.entityLists[k]) {
-                if (entityClass.isInstance(entity) && entity.getEntityBoundingBox().intersectsWith(aabb) && (filter == null || filter.apply(entity))) {
-                    listToFill.add(entity);
+                if (entityClass.isInstance(entity) && entity.getEntityBoundingBox().intersectsWith(aabb) && (filter == null || filter.apply((T) entity))) { // Paper - fix decompile
+                    listToFill.add((T) entity); // Paper - fix decompile
                 }
             }
         }
diff --git a/src/main/java/net/minecraft/world/chunk/storage/AnvilChunkLoader.java b/src/main/java/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
index ff78738..9ebf906 100644
--- a/src/main/java/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
+++ b/src/main/java/net/minecraft/world/chunk/storage/AnvilChunkLoader.java
@@ -322,7 +322,7 @@ public class AnvilChunkLoader implements IChunkLoader, IThreadedFileIO {
         }
 
         compound.setTag("TileEntities", nbttaglist2);
-        List list = worldIn.getPendingBlockUpdates(chunkIn, false);
+        List<NextTickListEntry> list = worldIn.getPendingBlockUpdates(chunkIn, false); // Paper - fix decompile
 
         if (list != null) {
             long k = worldIn.getTotalWorldTime();
diff --git a/src/main/java/net/minecraft/world/end/DragonFightManager.java b/src/main/java/net/minecraft/world/end/DragonFightManager.java
index 12215e3..a489055 100644
--- a/src/main/java/net/minecraft/world/end/DragonFightManager.java
+++ b/src/main/java/net/minecraft/world/end/DragonFightManager.java
@@ -299,7 +299,7 @@ public class DragonFightManager {
             var1.add(var3);
         }
 
-        HashSet var5 = Sets.newHashSet(this.bossInfo.getPlayers());
+        HashSet<EntityPlayerMP> var5 = Sets.newHashSet(this.bossInfo.getPlayers()); // Paper - fix decompile
         var5.removeAll(var1);
 
         for (EntityPlayerMP var4 : var5) {
diff --git a/src/main/java/net/minecraft/world/gen/FlatGeneratorInfo.java b/src/main/java/net/minecraft/world/gen/FlatGeneratorInfo.java
index 8c3aa27..76d001e 100644
--- a/src/main/java/net/minecraft/world/gen/FlatGeneratorInfo.java
+++ b/src/main/java/net/minecraft/world/gen/FlatGeneratorInfo.java
@@ -78,7 +78,7 @@ public class FlatGeneratorInfo {
                 }
 
                 var1.append(((String)var4.getKey()).toLowerCase(Locale.ROOT));
-                Map var5 = (Map)var4.getValue();
+                Map<String, String> var5 = (Map<String, String>)var4.getValue(); // Paper - fix decompile
 
                 if (!var5.isEmpty()) {
                     var1.append("(");
diff --git a/src/main/java/net/minecraft/world/gen/layer/GenLayer.java b/src/main/java/net/minecraft/world/gen/layer/GenLayer.java
index 07551fb..0bba611 100644
--- a/src/main/java/net/minecraft/world/gen/layer/GenLayer.java
+++ b/src/main/java/net/minecraft/world/gen/layer/GenLayer.java
@@ -56,7 +56,7 @@ public abstract class GenLayer {
         GenLayer var35 = GenLayerZoom.magnify(1000L, var8, 2);
         GenLayerBiomeEdge var36 = new GenLayerBiomeEdge(1000L, var35);
         GenLayer var9 = GenLayerZoom.magnify(1000L, var30, 2);
-        GenLayerHills var37 = new GenLayerHills(1000L, var36, var9);
+        GenLayer var37 = new GenLayerHills(1000L, var36, var9); // Paper - fix decompile
         GenLayer var31 = GenLayerZoom.magnify(1000L, var30, 2);
         var31 = GenLayerZoom.magnify(1000L, var31, var6);
         GenLayerRiver var33 = new GenLayerRiver(1L, var31);
diff --git a/src/main/java/net/minecraft/world/gen/structure/ComponentScatteredFeaturePieces.java b/src/main/java/net/minecraft/world/gen/structure/ComponentScatteredFeaturePieces.java
index b6be521..ed61bda 100644
--- a/src/main/java/net/minecraft/world/gen/structure/ComponentScatteredFeaturePieces.java
+++ b/src/main/java/net/minecraft/world/gen/structure/ComponentScatteredFeaturePieces.java
@@ -393,7 +393,7 @@ public class ComponentScatteredFeaturePieces {
 
                     BlockPos blockposition2 = blockposition.add(definedstructure.calculateConnectedPos(definedstructureinfo, new BlockPos(3, -1 - i * 3, 5), definedstructureinfo, new BlockPos(3, 5, 7)));
                     definedstructure2.addBlocksToWorldChunk(worldIn, blockposition2, definedstructureinfo);
-                    Map map = definedstructure2.getDataBlocks(blockposition2, definedstructureinfo);
+                    Map<BlockPos, String> map = definedstructure2.getDataBlocks(blockposition2, definedstructureinfo); // Paper - fix decompile
 
                     for (Entry entry : map.entrySet()) {
                         if ("chest".equals(entry.getValue())) {
diff --git a/src/main/java/net/minecraft/world/gen/structure/StructureComponentTemplate.java b/src/main/java/net/minecraft/world/gen/structure/StructureComponentTemplate.java
index c428477..8d1933f 100644
--- a/src/main/java/net/minecraft/world/gen/structure/StructureComponentTemplate.java
+++ b/src/main/java/net/minecraft/world/gen/structure/StructureComponentTemplate.java
@@ -60,7 +60,7 @@ public abstract class StructureComponentTemplate extends StructureComponent {
     public boolean addComponentParts(World worldIn, Random randomIn, StructureBoundingBox structureBoundingBoxIn) {
         this.placeSettings.setBoundingBox(structureBoundingBoxIn);
         this.template.addBlocksToWorld(worldIn, this.templatePosition, this.placeSettings, 18);
-        Map var4 = this.template.getDataBlocks(this.templatePosition, this.placeSettings);
+        Map<BlockPos, String> var4 = this.template.getDataBlocks(this.templatePosition, this.placeSettings); // Paper - fix decompile
 
         for (Entry var6 : var4.entrySet()) {
             String var7 = (String)var6.getValue();
diff --git a/src/main/java/net/minecraft/world/gen/structure/StructureEndCityPieces.java b/src/main/java/net/minecraft/world/gen/structure/StructureEndCityPieces.java
index e4ea7d9..9a3d6a9 100644
--- a/src/main/java/net/minecraft/world/gen/structure/StructureEndCityPieces.java
+++ b/src/main/java/net/minecraft/world/gen/structure/StructureEndCityPieces.java
@@ -190,7 +190,7 @@ public class StructureEndCityPieces {
         if (p_191088_2_ > 8) {
             return false;
         } else {
-            ArrayList var7 = Lists.newArrayList();
+            ArrayList<StructureComponent> var7 = Lists.newArrayList(); // Paper - fix decompile
 
             if (p_191088_1_.generate(p_191088_0_, p_191088_2_, p_191088_3_, p_191088_4_, var7, p_191088_6_)) {
                 boolean var8 = false;
diff --git a/src/main/java/net/minecraft/world/gen/structure/StructureOceanMonumentPieces.java b/src/main/java/net/minecraft/world/gen/structure/StructureOceanMonumentPieces.java
index 39bc920..81a09bd 100644
--- a/src/main/java/net/minecraft/world/gen/structure/StructureOceanMonumentPieces.java
+++ b/src/main/java/net/minecraft/world/gen/structure/StructureOceanMonumentPieces.java
@@ -615,7 +615,7 @@ public class StructureOceanMonumentPieces {
                 this.boundingBox = new StructureBoundingBox(p_i45599_2_, 39, p_i45599_3_, p_i45599_2_ + 58 - 1, 61, p_i45599_3_ + 58 - 1);
             }
 
-            List var6 = this.generateRoomGraph(p_i45599_1_);
+            List<StructureOceanMonumentPieces.RoomDefinition> var6 = this.generateRoomGraph(p_i45599_1_); // Paper - fix decompile
             this.sourceRoom.claimed = true;
             this.childPieces.add(new StructureOceanMonumentPieces.EntryRoom(var5, this.sourceRoom));
             this.childPieces.add(new StructureOceanMonumentPieces.MonumentCoreRoom(var5, this.coreRoom, p_i45599_1_));
@@ -743,7 +743,7 @@ public class StructureOceanMonumentPieces {
             this.coreRoom.connections[EnumFacing.EAST.getIndex()].connections[EnumFacing.UP.getIndex()].claimed = true;
             this.coreRoom.connections[EnumFacing.NORTH.getIndex()].connections[EnumFacing.UP.getIndex()].claimed = true;
             this.coreRoom.connections[EnumFacing.EAST.getIndex()].connections[EnumFacing.NORTH.getIndex()].connections[EnumFacing.UP.getIndex()].claimed = true;
-            ArrayList var30 = Lists.newArrayList();
+            ArrayList<StructureOceanMonumentPieces.RoomDefinition> var30 = Lists.newArrayList(); // Paper - fix decompile
 
             for (StructureOceanMonumentPieces.RoomDefinition var37 : var2) {
                 if (var37 != null) {
diff --git a/src/main/java/net/minecraft/world/gen/structure/WoodlandMansionPieces.java b/src/main/java/net/minecraft/world/gen/structure/WoodlandMansionPieces.java
index ca7297e..1e35d23 100644
--- a/src/main/java/net/minecraft/world/gen/structure/WoodlandMansionPieces.java
+++ b/src/main/java/net/minecraft/world/gen/structure/WoodlandMansionPieces.java
@@ -261,7 +261,7 @@ public class WoodlandMansionPieces {
         }
 
         private void a(WoodlandMansionPieces.SimpleGrid var1, WoodlandMansionPieces.SimpleGrid var2) {
-            ArrayList var3 = Lists.newArrayList();
+            ArrayList<Tuple> var3 = Lists.newArrayList(); // Paper - fix decompile
 
             for (int var4 = 0; var4 < var1.height; ++var4) {
                 for (int var5 = 0; var5 < var1.width; ++var5) {
diff --git a/src/main/java/net/minecraft/world/gen/structure/template/Template.java b/src/main/java/net/minecraft/world/gen/structure/template/Template.java
index 0d6fcd4..b30073b 100644
--- a/src/main/java/net/minecraft/world/gen/structure/template/Template.java
+++ b/src/main/java/net/minecraft/world/gen/structure/template/Template.java
@@ -109,7 +109,7 @@ public class Template {
      * takes blocks from the world and puts the data them into this template
      */
     private void takeEntitiesFromWorld(World worldIn, BlockPos startPos, BlockPos endPos) {
-        List var4 = worldIn.getEntitiesWithinAABB(Entity.class, new AxisAlignedBB(startPos, endPos), new Predicate<Entity>() {
+        List<Entity> var4 = worldIn.getEntitiesWithinAABB(Entity.class, new AxisAlignedBB(startPos, endPos), new Predicate<Entity>() { // Paper - fix decompile
             public boolean apply(@Nullable Entity var1) {
                 return !(var1 instanceof EntityPlayer);
             }
-- 
2.12.1

