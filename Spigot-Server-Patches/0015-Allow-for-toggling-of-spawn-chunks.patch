From b51bff78671bd5a8d5e50f823a2aa876d9b6c25e Mon Sep 17 00:00:00 2001
From: Zach Brown <zach.brown@destroystokyo.com>
Date: Thu, 3 Mar 2016 03:53:43 -0600
Subject: [PATCH] Allow for toggling of spawn chunks


diff --git a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
index 21e61fe..db50570 100644
--- a/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
+++ b/src/main/java/com/destroystokyo/paper/PaperWorldConfig.java
@@ -114,4 +114,10 @@ public class PaperWorldConfig {
         softDespawnDistance = softDespawnDistance * softDespawnDistance;
         hardDespawnDistance = hardDespawnDistance * hardDespawnDistance;
     }
+
+    public boolean keepSpawnInMemory;
+    private void keepSpawnInMemory() {
+        keepSpawnInMemory = getBoolean("keep-spawn-loaded", true);
+        log("Keep spawn chunk loaded: " + keepSpawnInMemory);
+    }
 }
diff --git a/src/main/java/net/minecraft/world/World.java b/src/main/java/net/minecraft/world/World.java
index 398d813..1c97b82 100644
--- a/src/main/java/net/minecraft/world/World.java
+++ b/src/main/java/net/minecraft/world/World.java
@@ -269,6 +269,7 @@ public abstract class World implements IBlockAccess {
         });
         this.getServer().addWorld(this.world);
         timings = new co.aikar.timings.WorldTimingsHandler(this); // Paper - code below can generate new world and access timings
+        this.keepSpawnInMemory = this.paperConfig.keepSpawnInMemory; // Paper
         this.entityLimiter = new TickLimiter(this.spigotConfig.entityMaxTickTime);
         this.tileLimiter = new TickLimiter(this.spigotConfig.tileMaxTickTime);
     }
-- 
2.9.3

