From 46f20e0cfcd23b331188f20f5e88783d5e06854c Mon Sep 17 00:00:00 2001
From: Jedediah Smith <jedediah@silencegreys.com>
Date: Wed, 2 Mar 2016 23:13:07 -0600
Subject: [PATCH] Send absolute position the first time an entity is seen


diff --git a/src/main/java/net/minecraft/entity/EntityTrackerEntry.java b/src/main/java/net/minecraft/entity/EntityTrackerEntry.java
index 4cd96f9..10d8b2f 100644
--- a/src/main/java/net/minecraft/entity/EntityTrackerEntry.java
+++ b/src/main/java/net/minecraft/entity/EntityTrackerEntry.java
@@ -108,7 +108,11 @@ public class EntityTrackerEntry {
     private boolean ridingEntity;
     private boolean onGround;
     public boolean playerEntitiesUpdated;
-    public final Set<EntityPlayerMP> trackingPlayers = Sets.<EntityPlayerMP>newHashSet();
+    // Paper start - Replace trackingPlayers Set with a Map. The value is true until the player receives
+    // their first update (which is forced to have absolute coordinates), false afterward.
+    public java.util.Map<EntityPlayerMP, Boolean> trackingPlayerMap = new java.util.HashMap<>();
+    public final Set<EntityPlayerMP> trackingPlayers = trackingPlayerMap.keySet();
+    // Paper end
 
     public EntityTrackerEntry(Entity entityIn, int rangeIn, int maxRangeIn, int updateFrequencyIn, boolean sendVelocityUpdatesIn) {
         this.trackedEntity = entityIn;
@@ -204,6 +208,7 @@ public class EntityTrackerEntry {
                 boolean flag1 = l1 * l1 + i2 * i2 + j2 * j2 >= 128L || this.updateCounter % 60 == 0;
                 boolean flag2 = Math.abs(j1 - this.encodedRotationYaw) >= 1 || Math.abs(k1 - this.encodedRotationPitch) >= 1;
 
+                if (this.updateCounter > 0 || this.trackedEntity instanceof EntityArrow) { // Paper - Moved up
                 if (flag1) {
                     this.encodedPosX = k;
                     this.encodedPosY = l;
@@ -215,7 +220,6 @@ public class EntityTrackerEntry {
                     this.encodedRotationPitch = k1;
                 }
 
-                if (this.updateCounter > 0 || this.trackedEntity instanceof EntityArrow) {
                     if (l1 >= -32768L && l1 < 32768L && i2 >= -32768L && i2 < 32768L && j2 >= -32768L && j2 < 32768L && this.ticksSinceLastForcedTeleport <= 400 && !this.ridingEntity && this.onGround == this.trackedEntity.onGround) {
                         if ((!flag1 || !flag2) && !(this.trackedEntity instanceof EntityArrow)) {
                             if (flag1) {
@@ -261,7 +265,24 @@ public class EntityTrackerEntry {
                 }
 
                 if (object != null) {
-                    this.sendPacketToTrackedPlayers((Packet)object);
+                    // Paper start - ensure fresh viewers get an absolute position on their first update,
+                    // since we can't be certain what position they received in the spawn packet.
+                    if (object instanceof SPacketEntityTeleport) {
+                        this.sendPacketToTrackedPlayers((Packet)object);
+                    } else {
+                        SPacketEntityTeleport teleportPacket = null;
+                        for (java.util.Map.Entry<EntityPlayerMP, Boolean> viewer : trackingPlayerMap.entrySet()) {
+                            if (viewer.getValue()) {
+                                viewer.setValue(false);
+                                if (teleportPacket == null) {
+                                    teleportPacket = new SPacketEntityTeleport(this.trackedEntity);
+                                }
+                                viewer.getKey().connection.sendPacket(teleportPacket);
+                            } else {
+                                viewer.getKey().connection.sendPacket((Packet) object);
+                            }
+                        }
+                    }
                 }
 
                 this.sendMetadata();
@@ -378,7 +399,7 @@ public class EntityTrackerEntry {
                     }
 
                     playerMP.entityRemoveQueue.remove(Integer.valueOf(this.trackedEntity.getEntityId()));
-                    this.trackingPlayers.add(playerMP);
+                    this.trackingPlayerMap.put(playerMP, true); // Paper
                     Packet packet = this.createSpawnPacket();
                     playerMP.connection.sendPacket(packet);
 
-- 
2.12.1.windows.1

