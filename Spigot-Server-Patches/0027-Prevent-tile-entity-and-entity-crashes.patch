From 1620113ab81849661143a934d0f1b800b5da84db Mon Sep 17 00:00:00 2001
From: Aikar <aikar@aikar.co>
Date: Tue, 1 Mar 2016 23:52:34 -0600
Subject: [PATCH] Prevent tile entity and entity crashes


diff --git a/src/main/java/net/minecraft/tileentity/TileEntity.java b/src/main/java/net/minecraft/tileentity/TileEntity.java
index 5594ae3..aa29da4 100644
--- a/src/main/java/net/minecraft/tileentity/TileEntity.java
+++ b/src/main/java/net/minecraft/tileentity/TileEntity.java
@@ -209,7 +209,11 @@ public abstract class TileEntity {
         });
 
         if (this.world != null) {
-            CrashReportCategory.addBlockInfo(reportCategory, this.pos, this.getBlockType(), this.getBlockMetadata());
+            // Paper start - Don't explode if a block is null
+            if (blockType != null) {
+                CrashReportCategory.addBlockInfo(reportCategory, this.pos, this.getBlockType(), this.getBlockMetadata());
+            }
+            // Paper end
             reportCategory.setDetail("Actual block type", new ICrashReportDetail() {
                 public String call() throws Exception {
                     int i = Block.getIdFromBlock(TileEntity.this.world.getBlockState(TileEntity.this.pos).getBlock());
diff --git a/src/main/java/net/minecraft/world/World.java b/src/main/java/net/minecraft/world/World.java
index 6cd346a..5022191 100644
--- a/src/main/java/net/minecraft/world/World.java
+++ b/src/main/java/net/minecraft/world/World.java
@@ -1554,10 +1554,12 @@ public abstract class World implements IBlockAccess {
                         entity.tickTimer.stopTiming(); // Paper
                     } catch (Throwable var18) {
                         entity.tickTimer.stopTiming(); // Paper
-                        CrashReport crashreport1 = CrashReport.makeCrashReport(var18, "Ticking entity");
-                        CrashReportCategory crashreportsystemdetails1 = crashreport1.makeCategory("Entity being ticked");
-                        entity.addEntityCrashInfo(crashreportsystemdetails1);
-                        throw new ReportedException(crashreport1);
+                        // Paper start - Prevent tile entity and entity crashes
+                        System.err.println("Entity threw exception at " + entity.world.getWorld().getName() + ":" + entity.posX + "," + entity.posY + "," + entity.posZ);
+                        var18.printStackTrace();
+                        entity.setDead();
+                        continue;
+                        // Paper end
                     }
                 }
 
@@ -1618,10 +1620,13 @@ public abstract class World implements IBlockAccess {
                             ((ITickable)tileentity).update();
                             this.profiler.endSection();
                         } catch (Throwable var16) {
-                            CrashReport crashreport1 = CrashReport.makeCrashReport(var16, "Ticking block entity");
-                            CrashReportCategory crashreportsystemdetails1 = crashreport1.makeCategory("Block entity being ticked");
-                            tileentity.addInfoToCrashReport(crashreportsystemdetails1);
-                            throw new ReportedException(crashreport1);
+                            // Paper start - Prevent tile entity and entity crashes
+                            System.err.println("TileEntity threw exception at " + tileentity.world.getWorld().getName() + ":" + tileentity.pos.getX() + "," + tileentity.pos.getY() + "," + tileentity.pos.getZ());
+                            var16.printStackTrace();
+                            tilesThisCycle--;
+                            this.tickableTileEntities.remove(tileTickPosition--);
+                            continue;
+                            // Paper end
                         } finally {
                             tileentity.tickTimer.stopTiming();
                         }
-- 
2.12.1.windows.1

