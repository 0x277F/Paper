From 8eb843b661d5b7bdd7ea650546ed3a7b2f544179 Mon Sep 17 00:00:00 2001
From: DemonWav <demonwav@gmail.com>
Date: Mon, 3 Apr 2017 00:05:04 -0500
Subject: [PATCH] Decmop


diff --git a/src/main/java/net/minecraft/block/BlockRedstoneWire.java b/src/main/java/net/minecraft/block/BlockRedstoneWire.java
index 54a0bc1..c4b251e 100644
--- a/src/main/java/net/minecraft/block/BlockRedstoneWire.java
+++ b/src/main/java/net/minecraft/block/BlockRedstoneWire.java
@@ -131,7 +131,7 @@ public class BlockRedstoneWire extends Block {
 
     private IBlockState updateSurroundingRedstone(World worldIn, BlockPos pos, IBlockState state) {
         state = this.calculateCurrentChanges(worldIn, pos, pos, state);
-        ArrayList arraylist = Lists.newArrayList(this.blocksNeedingUpdate);
+        ArrayList<BlockPos> arraylist = Lists.newArrayList(this.blocksNeedingUpdate); // Paper - fix decompile
         this.blocksNeedingUpdate.clear();
 
         for (BlockPos blockposition1 : arraylist) {
@@ -453,4 +453,4 @@ public class BlockRedstoneWire extends Block {
             return this.name;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/block/BlockStairs.java b/src/main/java/net/minecraft/block/BlockStairs.java
index dd93a6e..f2b90d5 100644
--- a/src/main/java/net/minecraft/block/BlockStairs.java
+++ b/src/main/java/net/minecraft/block/BlockStairs.java
@@ -344,7 +344,7 @@ public class BlockStairs extends Block {
      */
     @Nullable
     public RayTraceResult collisionRayTrace(IBlockState blockState, World worldIn, BlockPos pos, Vec3d start, Vec3d end) {
-        ArrayList var6 = Lists.newArrayList();
+        ArrayList<RayTraceResult> var6 = Lists.newArrayList(); // Paper - fix decompile
 
         for (AxisAlignedBB var8 : getCollisionBoxList(this.getActualState(blockState, worldIn, pos))) {
             var6.add(this.rayTrace(pos, start, end, var8));
@@ -540,4 +540,4 @@ public class BlockStairs extends Block {
             return this.name;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/command/CommandClone.java b/src/main/java/net/minecraft/command/CommandClone.java
index 5bf33ae..8a971b4 100644
--- a/src/main/java/net/minecraft/command/CommandClone.java
+++ b/src/main/java/net/minecraft/command/CommandClone.java
@@ -92,10 +92,10 @@ public class CommandClone extends CommandBase {
                                 }
                             }
 
-                            ArrayList var15 = Lists.newArrayList();
-                            ArrayList var16 = Lists.newArrayList();
-                            ArrayList var17 = Lists.newArrayList();
-                            LinkedList var18 = Lists.newLinkedList();
+                            ArrayList<CommandClone.StaticCloneData> var15 = Lists.newArrayList(); // Paper - fix decompile
+                            ArrayList<CommandClone.StaticCloneData> var16 = Lists.newArrayList(); // Paper - fix decompile
+                            ArrayList<CommandClone.StaticCloneData> var17 = Lists.newArrayList(); // Paper - fix decompile
+                            LinkedList<BlockPos> var18 = Lists.newLinkedList(); // Paper - fix decompile
                             BlockPos var19 = new BlockPos(var8.minX - var7.minX, var8.minY - var7.minY, var8.minZ - var7.minZ);
 
                             for (int var20 = var7.minZ; var20 <= var7.maxZ; ++var20) {
@@ -140,11 +140,11 @@ public class CommandClone extends CommandBase {
                                 }
                             }
 
-                            ArrayList var31 = Lists.newArrayList();
+                            ArrayList<CommandClone.StaticCloneData> var31 = Lists.newArrayList(); // Paper - fix decompile
                             var31.addAll(var15);
                             var31.addAll(var16);
                             var31.addAll(var17);
-                            List var34 = Lists.reverse(var31);
+                            List<CommandClone.StaticCloneData> var34 = Lists.reverse(var31); // Paper - fix decompile
 
                             for (CommandClone.StaticCloneData var41 : var34) {
                                 TileEntity var46 = var13.getTileEntity(var41.pos);
@@ -182,7 +182,7 @@ public class CommandClone extends CommandBase {
                                 var13.notifyNeighborsRespectDebug(var44.pos, var44.blockState.getBlock(), false);
                             }
 
-                            List var40 = var13.getPendingBlockUpdates(var7, false);
+                            List<NextTickListEntry> var40 = var13.getPendingBlockUpdates(var7, false); // Paper - fix decompile
 
                             if (var40 != null) {
                                 for (NextTickListEntry var48 : var40) {
@@ -225,4 +225,4 @@ public class CommandClone extends CommandBase {
             this.nbt = compoundIn;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/command/CommandExecuteAt.java b/src/main/java/net/minecraft/command/CommandExecuteAt.java
index 6c49d40..d32b990 100644
--- a/src/main/java/net/minecraft/command/CommandExecuteAt.java
+++ b/src/main/java/net/minecraft/command/CommandExecuteAt.java
@@ -164,30 +164,30 @@ public class CommandExecuteAt extends CommandBase {
             ICommandManager icommandhandler = server.getCommandManager();
 
             try {
-                CommandSender sender = null;
+                CommandSender sender1 = null; // Paper - fix decompile
                 ICommandSender listener = sender;
 
-                while (sender == null) {
+                while (sender1 == null) { // Paper - fix decompile
                     if (listener instanceof DedicatedServer) {
-                        sender = server.console;
+                        sender1 = server.console; // Paper - fix decompile
                     } else if (listener instanceof RConConsoleSource) {
-                        sender = server.remoteConsole;
+                        sender1 = server.remoteConsole; // Paper - fix decompile
                     } else if (listener instanceof CommandBlockBaseLogic) {
-                        sender = ((CommandBlockBaseLogic)listener).sender;
+                        sender1 = ((CommandBlockBaseLogic)listener).sender; // Paper - fix decompile
                     } else if (listener instanceof ProxyListener) {
                         listener = ((ProxyListener)listener).base;
                     } else if (VanillaCommandWrapper.lastSender != null) {
-                        sender = VanillaCommandWrapper.lastSender;
+                        sender1 = VanillaCommandWrapper.lastSender; // Paper - fix decompile
                     } else {
                         if (listener.getCommandSenderEntity() == null) {
                             throw new CommandException("Unhandled executor " + sender.getClass().getSimpleName(), new Object[0]);
                         }
 
-                        sender = listener.getCommandSenderEntity().getBukkitEntity();
+                        sender1 = listener.getCommandSenderEntity().getBukkitEntity(); // Paper - fix decompile
                     }
                 }
 
-                int i = CommandBlockBaseLogic.executeCommand(icommandlistener1, new ProxiedNativeCommandSender(icommandlistener1, sender, entity.getBukkitEntity()), s);
+                int i = CommandBlockBaseLogic.executeCommand(icommandlistener1, new ProxiedNativeCommandSender(icommandlistener1, sender1, entity.getBukkitEntity()), s); // Paper - fix decompile
 
                 if (i < 1) {
                     throw new CommandException("commands.execute.allInvocationsFailed", new Object[] {s});
@@ -216,4 +216,4 @@ public class CommandExecuteAt extends CommandBase {
     public int compareTo(ICommand o) {
         return this.compareTo(o);
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/command/CommandStats.java b/src/main/java/net/minecraft/command/CommandStats.java
index d592cc7..1cf36b8 100644
--- a/src/main/java/net/minecraft/command/CommandStats.java
+++ b/src/main/java/net/minecraft/command/CommandStats.java
@@ -155,7 +155,7 @@ public class CommandStats extends CommandBase {
     }
 
     protected List<String> getObjectiveNames(MinecraftServer server) {
-        Collection var2 = server.worldServerForDimension(0).getScoreboard().getScoreObjectives();
+        Collection<ScoreObjective> var2 = server.worldServerForDimension(0).getScoreboard().getScoreObjectives(); // Paper - fix decompile
         ArrayList var3 = Lists.newArrayList();
 
         for (ScoreObjective var5 : var2) {
@@ -173,4 +173,4 @@ public class CommandStats extends CommandBase {
     public boolean isUsernameIndex(String[] args, int index) {
         return args.length > 0 && "entity".equals(args[0]) && index == 1;
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/command/EntitySelector.java b/src/main/java/net/minecraft/command/EntitySelector.java
index 0b6e4b7..9c02c2d 100644
--- a/src/main/java/net/minecraft/command/EntitySelector.java
+++ b/src/main/java/net/minecraft/command/EntitySelector.java
@@ -94,7 +94,7 @@ public class EntitySelector {
 
     @Nullable
     public static ITextComponent matchEntitiesToTextComponent(ICommandSender sender, String token) throws CommandException {
-        List var2 = matchEntities(sender, token, Entity.class);
+        List<Entity> var2 = matchEntities(sender, token, Entity.class); // Paper - fix decompile
 
         if (var2.isEmpty()) {
             return null;
@@ -121,7 +121,7 @@ public class EntitySelector {
                 String var5 = var3.group(1);
                 BlockPos var6 = getBlockPosFromArguments(var4, sender.getPosition());
                 Vec3d var7 = getPosFromArguments(var4, sender.getPositionVector());
-                List var8 = getWorlds(sender, var4);
+                List<World> var8 = getWorlds(sender, var4); // Paper - fix decompile
                 ArrayList var9 = Lists.newArrayList();
 
                 for (World var11 : var8) {
@@ -232,7 +232,7 @@ public class EntitySelector {
                 var2 = var2.substring(1);
             }
 
-            final GameType var4;
+            GameType var4; // Paper - fix decompile
 
             try {
                 int var5 = Integer.parseInt(var2);
@@ -241,6 +241,7 @@ public class EntitySelector {
                 var4 = GameType.parseGameTypeWithDefault(var2, GameType.NOT_SET);
             }
 
+            final GameType gameType = var4; // Paper - fix decompile
             var1.add(new Predicate<Entity>() {
                 public boolean apply(@Nullable Entity var1) {
                     if (!(var1 instanceof EntityPlayerMP)) {
@@ -248,7 +249,7 @@ public class EntitySelector {
                     } else {
                         EntityPlayerMP var2 = (EntityPlayerMP)var1;
                         GameType var3x = var2.interactionManager.getGameType();
-                        return var3 ? var3x != var4 : var3x == var4;
+                        return var3 ? var3x != gameType : var3x == gameType; // Paper - fix decompile
                     }
                 }
             });
@@ -258,7 +259,7 @@ public class EntitySelector {
 
     private static List<Predicate<Entity>> getTeamPredicates(Map<String, String> params) {
         ArrayList var1 = Lists.newArrayList();
-        final String var2 = getArgument(params, ARGUMENT_TEAM_NAME);
+        String var2 = getArgument(params, ARGUMENT_TEAM_NAME); // Paper - fix decompile
         final boolean var3 = var2 != null && var2.startsWith("!");
 
         if (var3) {
@@ -266,6 +267,7 @@ public class EntitySelector {
         }
 
         if (var2 != null) {
+            final String s = var2; // Paper - fix decompile
             var1.add(new Predicate<Entity>() {
                 public boolean apply(@Nullable Entity var1) {
                     if (!(var1 instanceof EntityLivingBase)) {
@@ -274,7 +276,7 @@ public class EntitySelector {
                         EntityLivingBase var2x = (EntityLivingBase)var1;
                         Team var3x = var2x.getTeam();
                         String var4 = var3x == null ? "" : var3x.getRegisteredName();
-                        return var4.equals(var2) != var3;
+                        return var4.equals(s) != var3; // Paper - fix decompile
                     }
                 }
             });
@@ -284,7 +286,7 @@ public class EntitySelector {
     }
 
     private static List<Predicate<Entity>> getScorePredicates(final ICommandSender sender, Map<String, String> params) {
-        final Map var2 = getScoreMap(params);
+        final Map<String, Integer> var2 = getScoreMap(params); // Paper - fix decompile
         return (List<Predicate<Entity>>)(var2.isEmpty() ? Collections.emptyList() : Lists.newArrayList(new Predicate[] {new Predicate<Entity>() {
             public boolean apply(@Nullable Entity var1) {
                 if (var1 == null) {
@@ -334,7 +336,7 @@ public class EntitySelector {
 
     private static List<Predicate<Entity>> getNamePredicates(Map<String, String> params) {
         ArrayList var1 = Lists.newArrayList();
-        final String var2 = getArgument(params, ARGUMENT_PLAYER_NAME);
+        String var2 = getArgument(params, ARGUMENT_PLAYER_NAME); // Paper - fix decompile
         final boolean var3 = var2 != null && var2.startsWith("!");
 
         if (var3) {
@@ -342,9 +344,10 @@ public class EntitySelector {
         }
 
         if (var2 != null) {
+            final String s = var2;
             var1.add(new Predicate<Entity>() {
                 public boolean apply(@Nullable Entity var1) {
-                    return var1 != null && var1.getName().equals(var2) != var3;
+                    return var1 != null && var1.getName().equals(s) != var3; // Paper - fix decompile
                 }
             });
         }
@@ -354,7 +357,7 @@ public class EntitySelector {
 
     private static List<Predicate<Entity>> getTagPredicates(Map<String, String> params) {
         ArrayList var1 = Lists.newArrayList();
-        final String var2 = getArgument(params, ARGUMENT_ENTITY_TAG);
+        String var2 = getArgument(params, ARGUMENT_ENTITY_TAG); // Paper - fix decompile
         final boolean var3 = var2 != null && var2.startsWith("!");
 
         if (var3) {
@@ -362,9 +365,10 @@ public class EntitySelector {
         }
 
         if (var2 != null) {
+            final String s = var2; // Paper - fix decompile
             var1.add(new Predicate<Entity>() {
                 public boolean apply(@Nullable Entity var1) {
-                    return var1 == null ? false : ("".equals(var2) ? var1.getTags().isEmpty() != var3 : var1.getTags().contains(var2) != var3);
+                    return var1 == null ? false : ("".equals(s) ? var1.getTags().isEmpty() != var3 : var1.getTags().contains(s) != var3); // Paper - fix decompile
                 }
             });
         }
@@ -453,16 +457,16 @@ public class EntitySelector {
                 AxisAlignedBB var19 = new AxisAlignedBB((double)(position.getX() - var13), (double)(position.getY() - var13), (double)(position.getZ() - var13), (double)(position.getX() + var13 + 1), (double)(position.getY() + var13 + 1), (double)(position.getZ() + var13 + 1));
 
                 if (var8 && !var9) {
-                    var6.addAll(worldIn.<E>getPlayers(entityClass, var15));
+                    var6.addAll(worldIn.getPlayers(entityClass, var15)); // Paper - fix decompile
                 } else {
-                    var6.addAll(worldIn.<E>getEntitiesWithinAABB(entityClass, var19, var15));
+                    var6.addAll(worldIn.getEntitiesWithinAABB(entityClass, var19, var15)); // Paper - fix decompile
                 }
             } else if (type.equals("a")) {
-                var6.addAll(worldIn.<E>getPlayers(entityClass, var14));
+                var6.addAll(worldIn.getPlayers(entityClass, var14)); // Paper - fix decompile
             } else if (!type.equals("p") && (!type.equals("r") || var9)) {
-                var6.addAll(worldIn.<E>getEntities(entityClass, var15));
+                var6.addAll(worldIn.getEntities(entityClass, var15)); // Paper - fix decompile
             } else {
-                var6.addAll(worldIn.<E>getPlayers(entityClass, var15));
+                var6.addAll(worldIn.getPlayers(entityClass, var15)); // Paper - fix decompile
             }
         } else {
             final AxisAlignedBB var16 = getAABB(position, var10, var11, var12);
@@ -473,9 +477,9 @@ public class EntitySelector {
                         return var1 != null && var16.intersectsWith(var1.getEntityBoundingBox());
                     }
                 };
-                var6.addAll(worldIn.<E>getPlayers(entityClass, Predicates.<E>and(var15, var17)));
+                var6.addAll(worldIn.getPlayers(entityClass, Predicates.and(var15, var17))); // Paper - fix decompile
             } else {
-                var6.addAll(worldIn.<E>getEntitiesWithinAABB(entityClass, var16, var15));
+                var6.addAll(worldIn.getEntitiesWithinAABB(entityClass, var16, var15)); // Paper - fix decompile
             }
         }
 
@@ -500,7 +504,7 @@ public class EntitySelector {
         Entity var7 = sender.getCommandSenderEntity();
 
         if (var7 != null && targetClass.isAssignableFrom(var7.getClass()) && var6 == 1 && ((List)matchingEntities).contains(var7) && !"r".equals(type)) {
-            matchingEntities = Lists.newArrayList(new Entity[] {var7});
+            matchingEntities = Lists.newArrayList((T[]) new Entity[] {var7}); // Paper - fix decompile
         }
 
         if (var6 != 0) {
@@ -613,4 +617,4 @@ public class EntitySelector {
             return var1;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/command/server/CommandBanIp.java b/src/main/java/net/minecraft/command/server/CommandBanIp.java
index e2fcac3..a137845 100644
--- a/src/main/java/net/minecraft/command/server/CommandBanIp.java
+++ b/src/main/java/net/minecraft/command/server/CommandBanIp.java
@@ -80,7 +80,7 @@ public class CommandBanIp extends CommandBase {
     protected void banIp(MinecraftServer server, ICommandSender sender, String ipAddress, @Nullable String banReason) {
         UserListIPBansEntry var5 = new UserListIPBansEntry(ipAddress, (Date)null, sender.getName(), (Date)null, banReason);
         server.getPlayerList().getBannedIPs().addEntry(var5);
-        List var6 = server.getPlayerList().getPlayersMatchingAddress(ipAddress);
+        List<EntityPlayerMP> var6 = server.getPlayerList().getPlayersMatchingAddress(ipAddress); // Paper - fix decompile
         String[] var7 = new String[var6.size()];
         int var8 = 0;
 
@@ -95,4 +95,4 @@ public class CommandBanIp extends CommandBase {
             notifyCommandListener(sender, this, "commands.banip.success.players", new Object[] {ipAddress, joinNiceString(var7)});
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/enchantment/EnchantmentHelper.java b/src/main/java/net/minecraft/enchantment/EnchantmentHelper.java
index 102947d..95a7829 100644
--- a/src/main/java/net/minecraft/enchantment/EnchantmentHelper.java
+++ b/src/main/java/net/minecraft/enchantment/EnchantmentHelper.java
@@ -179,7 +179,7 @@ public class EnchantmentHelper {
     }
 
     public static int getMaxEnchantmentLevel(Enchantment p_185284_0_, EntityLivingBase p_185284_1_) {
-        List var2 = p_185284_0_.getEntityEquipment(p_185284_1_);
+        List<ItemStack> var2 = p_185284_0_.getEntityEquipment(p_185284_1_); // Paper - fix decompile
 
         if (var2 == null) {
             return 0;
@@ -269,7 +269,7 @@ public class EnchantmentHelper {
     }
 
     public static ItemStack getEnchantedItem(Enchantment p_92099_0_, EntityLivingBase p_92099_1_) {
-        List var2 = p_92099_0_.getEntityEquipment(p_92099_1_);
+        List<ItemStack> var2 = p_92099_0_.getEntityEquipment(p_92099_1_); // Paper - fix decompile
 
         if (var2.isEmpty()) {
             return ItemStack.EMPTY;
@@ -310,7 +310,7 @@ public class EnchantmentHelper {
      * Applys a random enchantment to the specified item.
      */
     public static ItemStack addRandomEnchantment(Random random, ItemStack p_77504_1_, int p_77504_2_, boolean allowTreasure) {
-        List var4 = buildEnchantmentList(random, p_77504_1_, p_77504_2_, allowTreasure);
+        List<EnchantmentData> var4 = buildEnchantmentList(random, p_77504_1_, p_77504_2_, allowTreasure); // Paper - fix decompile
         boolean var5 = p_77504_1_.getItem() == Items.BOOK;
 
         if (var5) {
@@ -465,4 +465,4 @@ public class EnchantmentHelper {
             this.livingModifier += enchantmentIn.calcDamageByCreature(enchantmentLevel, this.entityLiving);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/entity/ai/EntityAIAvoidEntity.java b/src/main/java/net/minecraft/entity/ai/EntityAIAvoidEntity.java
index ffc758b..6bff5c3 100644
--- a/src/main/java/net/minecraft/entity/ai/EntityAIAvoidEntity.java
+++ b/src/main/java/net/minecraft/entity/ai/EntityAIAvoidEntity.java
@@ -55,7 +55,7 @@ public class EntityAIAvoidEntity<T extends Entity> extends EntityAIBase {
         if (var1.isEmpty()) {
             return false;
         } else {
-            this.closestLivingEntity = (Entity)var1.get(0);
+            this.closestLivingEntity = (T)var1.get(0); // Paper - fix decompile
             Vec3d var2 = RandomPositionGenerator.findRandomTargetBlockAwayFrom(this.theEntity, 16, 7, new Vec3d(this.closestLivingEntity.posX, this.closestLivingEntity.posY, this.closestLivingEntity.posZ));
 
             if (var2 == null) {
@@ -100,4 +100,4 @@ public class EntityAIAvoidEntity<T extends Entity> extends EntityAIBase {
             this.theEntity.getNavigator().setSpeed(this.farSpeed);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/entity/ai/EntityAIEatGrass.java b/src/main/java/net/minecraft/entity/ai/EntityAIEatGrass.java
index 364c65a..4cbddfd 100644
--- a/src/main/java/net/minecraft/entity/ai/EntityAIEatGrass.java
+++ b/src/main/java/net/minecraft/entity/ai/EntityAIEatGrass.java
@@ -14,7 +14,7 @@ import org.bukkit.Material;
 import org.bukkit.craftbukkit.event.CraftEventFactory;
 
 public class EntityAIEatGrass extends EntityAIBase {
-    private static final Predicate<IBlockState> IS_TALL_GRASS = BlockStateMatcher.forBlock(Blocks.TALLGRASS).where(BlockTallGrass.TYPE, Predicates.<V>equalTo(BlockTallGrass.EnumType.GRASS));
+    private static final Predicate<IBlockState> IS_TALL_GRASS = BlockStateMatcher.forBlock(Blocks.TALLGRASS).where(BlockTallGrass.TYPE, Predicates.equalTo(BlockTallGrass.EnumType.GRASS)); // Paper - fix decompile
     /** The entity owner of this AITask */
     private final EntityLiving grassEaterEntity;
     /** The world the grass eater entity is eating from */
@@ -99,4 +99,4 @@ public class EntityAIEatGrass extends EntityAIBase {
             }
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/entity/boss/EntityWither.java b/src/main/java/net/minecraft/entity/boss/EntityWither.java
index 75293d6..3285241 100644
--- a/src/main/java/net/minecraft/entity/boss/EntityWither.java
+++ b/src/main/java/net/minecraft/entity/boss/EntityWither.java
@@ -307,7 +307,7 @@ public class EntityWither extends EntityMob implements IRangedAttackMob {
                             this.updateWatchedTargetId(i, 0);
                         }
                     } else {
-                        List list = this.world.getEntitiesWithinAABB(EntityLivingBase.class, this.getEntityBoundingBox().expand(20.0D, 8.0D, 20.0D), Predicates.<T>and(NOT_UNDEAD, EntitySelectors.NOT_SPECTATING));
+                        List list = this.world.getEntitiesWithinAABB(EntityLivingBase.class, this.getEntityBoundingBox().expand(20.0D, 8.0D, 20.0D), Predicates.and(NOT_UNDEAD, EntitySelectors.NOT_SPECTATING)); // Paper - fix decompile
 
                         for (int i1 = 0; i1 < 10 && !list.isEmpty(); ++i1) {
                             EntityLivingBase entityliving = (EntityLivingBase)list.get(this.rand.nextInt(list.size()));
@@ -624,4 +624,4 @@ public class EntityWither extends EntityMob implements IRangedAttackMob {
             return EntityWither.this.getInvulTime() > 0;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/entity/monster/EntityZombieVillager.java b/src/main/java/net/minecraft/entity/monster/EntityZombieVillager.java
index fee410a..97f3280 100644
--- a/src/main/java/net/minecraft/entity/monster/EntityZombieVillager.java
+++ b/src/main/java/net/minecraft/entity/monster/EntityZombieVillager.java
@@ -127,7 +127,7 @@ public class EntityZombieVillager extends EntityZombie {
     /**
      * Determines if an entity can be despawned, used on idle far away entities
      */
-    protected boolean canDespawn() {
+    public boolean canDespawn() { // Paper - fix decompile
         return !this.isConverting();
     }
 
@@ -221,4 +221,4 @@ public class EntityZombieVillager extends EntityZombie {
     protected ItemStack getSkullDrop() {
         return ItemStack.EMPTY;
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/entity/projectile/EntityDragonFireball.java b/src/main/java/net/minecraft/entity/projectile/EntityDragonFireball.java
index c74b652..53ad412 100644
--- a/src/main/java/net/minecraft/entity/projectile/EntityDragonFireball.java
+++ b/src/main/java/net/minecraft/entity/projectile/EntityDragonFireball.java
@@ -33,7 +33,7 @@ public class EntityDragonFireball extends EntityFireball {
     protected void onImpact(RayTraceResult result) {
         if (result.entityHit == null || !result.entityHit.isEntityEqual(this.shootingEntity)) {
             if (!this.world.isRemote) {
-                List var2 = this.world.getEntitiesWithinAABB(EntityLivingBase.class, this.getEntityBoundingBox().expand(4.0D, 2.0D, 4.0D));
+                List<EntityLivingBase> var2 = this.world.getEntitiesWithinAABB(EntityLivingBase.class, this.getEntityBoundingBox().expand(4.0D, 2.0D, 4.0D)); // Paper - fix decompile
                 EntityAreaEffectCloud var3 = new EntityAreaEffectCloud(this.world, this.posX, this.posY, this.posZ);
                 var3.setOwner(this.shootingEntity);
                 var3.setParticle(EnumParticleTypes.DRAGON_BREATH);
@@ -81,4 +81,4 @@ public class EntityDragonFireball extends EntityFireball {
     protected boolean isFireballFiery() {
         return false;
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/inventory/ContainerRepair.java b/src/main/java/net/minecraft/inventory/ContainerRepair.java
index 28ede21..9de1d4c 100644
--- a/src/main/java/net/minecraft/inventory/ContainerRepair.java
+++ b/src/main/java/net/minecraft/inventory/ContainerRepair.java
@@ -148,7 +148,7 @@ public class ContainerRepair extends Container {
         } else {
             ItemStack itemstack1 = itemstack.copy();
             ItemStack itemstack2 = this.inputSlots.getStackInSlot(1);
-            Map map = EnchantmentHelper.getEnchantments(itemstack1);
+            Map<Enchantment, Integer> map = EnchantmentHelper.getEnchantments(itemstack1); // Paper - fix decompile
             int j = b0 + itemstack.getRepairCost() + (itemstack2.isEmpty() ? 0 : itemstack2.getRepairCost());
             this.materialCost = 0;
 
@@ -198,7 +198,7 @@ public class ContainerRepair extends Container {
                         }
                     }
 
-                    Map map1 = EnchantmentHelper.getEnchantments(itemstack2);
+                    Map<Enchantment, Integer> map1 = EnchantmentHelper.getEnchantments(itemstack2); // Paper - fix decompile
 
                     for (Enchantment enchantment : map1.keySet()) {
                         if (enchantment != null) {
@@ -395,4 +395,4 @@ public class ContainerRepair extends Container {
             return this.bukkitEntity;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/network/NetworkManager.java b/src/main/java/net/minecraft/network/NetworkManager.java
index 4ee5f7d..23eaa98 100644
--- a/src/main/java/net/minecraft/network/NetworkManager.java
+++ b/src/main/java/net/minecraft/network/NetworkManager.java
@@ -130,7 +130,7 @@ public class NetworkManager extends SimpleChannelInboundHandler < Packet<? >> {
         }
     }
 
-    protected void channelRead0(ChannelHandlerContext channelhandlercontext, Packet<?> packet) throws Exception {
+    protected void channelRead0(ChannelHandlerContext channelhandlercontext, Packet packet) throws Exception { // Paper - fix decompile
         if (this.channel.isOpen()) {
             try {
                 packet.processPacket(this.packetListener);
@@ -382,4 +382,4 @@ public class NetworkManager extends SimpleChannelInboundHandler < Packet<? >> {
             this.futureListeners = inFutureListeners;
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/profiler/Snooper.java b/src/main/java/net/minecraft/profiler/Snooper.java
index 67109b6..54bad61 100644
--- a/src/main/java/net/minecraft/profiler/Snooper.java
+++ b/src/main/java/net/minecraft/profiler/Snooper.java
@@ -88,7 +88,7 @@ public class Snooper {
 
     private void addJvmArgsToSnooper() {
         RuntimeMXBean var1 = ManagementFactory.getRuntimeMXBean();
-        List var2 = var1.getInputArguments();
+        List<String> var2 = var1.getInputArguments(); // Paper - fix decompile
         int var3 = 0;
 
         for (String var5 : var2) {
@@ -134,4 +134,4 @@ public class Snooper {
     public long getMinecraftStartTimeMillis() {
         return this.minecraftStartTimeMilis;
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/scoreboard/Scoreboard.java b/src/main/java/net/minecraft/scoreboard/Scoreboard.java
index f4b0366..be3237f 100644
--- a/src/main/java/net/minecraft/scoreboard/Scoreboard.java
+++ b/src/main/java/net/minecraft/scoreboard/Scoreboard.java
@@ -155,7 +155,7 @@ public class Scoreboard {
     }
 
     public Collection<Score> getScores() {
-        Collection var1 = this.entitiesScoreObjectives.values();
+        Collection<Map<ScoreObjective, Score>> var1 = this.entitiesScoreObjectives.values(); // Paper - fix decompile
         ArrayList var2 = Lists.newArrayList();
 
         for (Map var4 : var1) {
@@ -414,4 +414,4 @@ public class Scoreboard {
             this.removePlayerFromTeams(var2);
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/scoreboard/ServerScoreboard.java b/src/main/java/net/minecraft/scoreboard/ServerScoreboard.java
index 8d95fd8..3ab1fc8 100644
--- a/src/main/java/net/minecraft/scoreboard/ServerScoreboard.java
+++ b/src/main/java/net/minecraft/scoreboard/ServerScoreboard.java
@@ -176,7 +176,7 @@ public class ServerScoreboard extends Scoreboard {
     }
 
     public void addObjective(ScoreObjective objective) {
-        List list = this.getCreatePackets(objective);
+        List<Packet<?>> list = this.getCreatePackets(objective); // Paper - fix decompile
 
         for (EntityPlayerMP entityplayer : this.scoreboardMCServer.getPlayerList().getPlayers()) {
             if (entityplayer.getBukkitEntity().getScoreboard().getHandle() == this) {
@@ -203,7 +203,7 @@ public class ServerScoreboard extends Scoreboard {
     }
 
     public void sendDisplaySlotRemovalPackets(ScoreObjective p_96546_1_) {
-        List list = this.getDestroyPackets(p_96546_1_);
+        List<Packet<?>> list = this.getDestroyPackets(p_96546_1_); // Paper - fix decompile
 
         for (EntityPlayerMP entityplayer : this.scoreboardMCServer.getPlayerList().getPlayers()) {
             if (entityplayer.getBukkitEntity().getScoreboard().getHandle() == this) {
@@ -235,4 +235,4 @@ public class ServerScoreboard extends Scoreboard {
             }
         }
     }
-}
\ No newline at end of file
+}
diff --git a/src/main/java/net/minecraft/util/datafix/DataFixer.java b/src/main/java/net/minecraft/util/datafix/DataFixer.java
index 592b2eb..a43c898 100644
--- a/src/main/java/net/minecraft/util/datafix/DataFixer.java
+++ b/src/main/java/net/minecraft/util/datafix/DataFixer.java
@@ -90,7 +90,7 @@ public class DataFixer implements IDataFixer {
     }
 
     private <V> List<V> getTypeList(Map<IFixType, List<V>> map, IFixType type) {
-        Object var3 = (List)map.get(type);
+        List var3 = (List)map.get(type); // Paper - fix decompile
 
         if (var3 == null) {
             var3 = Lists.newArrayList();
@@ -99,4 +99,4 @@ public class DataFixer implements IDataFixer {
 
         return (List<V>)var3;
     }
-}
\ No newline at end of file
+}
-- 
2.12.1

